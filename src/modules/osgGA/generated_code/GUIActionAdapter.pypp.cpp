// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgga.h"
#include "guiactionadapter.pypp.hpp"

namespace bp = boost::python;

struct GUIActionAdapter_wrapper : osgGA::GUIActionAdapter, bp::wrapper< osgGA::GUIActionAdapter > {

    GUIActionAdapter_wrapper()
    : osgGA::GUIActionAdapter()
      , bp::wrapper< osgGA::GUIActionAdapter >(){
        // null constructor
        
    }

    virtual ::osg::View * asView(  ) {
        if( bp::override func_asView = this->get_override( "asView" ) )
            return func_asView(  );
        else{
            return this->osgGA::GUIActionAdapter::asView(  );
        }
    }
    
    ::osg::View * default_asView(  ) {
        return osgGA::GUIActionAdapter::asView( );
    }

    virtual void requestContinuousUpdate( bool needed=true ){
        bp::override func_requestContinuousUpdate = this->get_override( "requestContinuousUpdate" );
        func_requestContinuousUpdate( needed );
    }

    virtual void requestRedraw(  ){
        bp::override func_requestRedraw = this->get_override( "requestRedraw" );
        func_requestRedraw(  );
    }

    virtual void requestWarpPointer( float x, float y ){
        bp::override func_requestWarpPointer = this->get_override( "requestWarpPointer" );
        func_requestWarpPointer( x, y );
    }

};

void register_GUIActionAdapter_class(){

    bp::class_< GUIActionAdapter_wrapper, boost::noncopyable >( "GUIActionAdapter" )    
        .def( 
            "asView"
            , (::osg::View * ( ::osgGA::GUIActionAdapter::* )(  ))(&::osgGA::GUIActionAdapter::asView)
            , (::osg::View * ( GUIActionAdapter_wrapper::* )(  ))(&GUIActionAdapter_wrapper::default_asView)
            , bp::return_internal_reference< >() )    
        .def( 
            "requestContinuousUpdate"
            , bp::pure_virtual( (void ( ::osgGA::GUIActionAdapter::* )( bool ))(&::osgGA::GUIActionAdapter::requestContinuousUpdate) )
            , ( bp::arg("needed")=(bool)(true) ) )    
        .def( 
            "requestRedraw"
            , bp::pure_virtual( (void ( ::osgGA::GUIActionAdapter::* )(  ))(&::osgGA::GUIActionAdapter::requestRedraw) ) )    
        .def( 
            "requestWarpPointer"
            , bp::pure_virtual( (void ( ::osgGA::GUIActionAdapter::* )( float,float ))(&::osgGA::GUIActionAdapter::requestWarpPointer) )
            , ( bp::arg("x"), bp::arg("y") ) );

}
