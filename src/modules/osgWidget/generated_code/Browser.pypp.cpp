// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgwidget.h"
#include "wrap_referenced.h"
#include "browser.pypp.hpp"

namespace bp = boost::python;

void register_Browser_class(){

    { //::osgWidget::Browser
        typedef bp::class_< osgWidget::Browser, osg::ref_ptr< ::osgWidget::Browser >, boost::noncopyable > Browser_exposer_t;
        Browser_exposer_t Browser_exposer = Browser_exposer_t( "Browser", "\n Convenience class that provides an interactive quad that can be placed directly into the scene.\n", bp::init< >("\n Convenience class that provides an interactive quad that can be placed directly into the scene.\n") );
        bp::scope Browser_scope( Browser_exposer );
        Browser_exposer.def( bp::init< std::string const &, bp::optional< osgWidget::GeometryHints const & > >(( bp::arg("url"), bp::arg("hints")=osgWidget::GeometryHints() ), "\n Convenience class that provides an interactive quad that can be placed directly into the scene.\n") );
        bp::implicitly_convertible< std::string const &, osgWidget::Browser >();
        { //::osgWidget::Browser::assign
        
            typedef bool ( ::osgWidget::Browser::*assign_function_type )( ::osgWidget::BrowserImage *,::osgWidget::GeometryHints const & ) ;
            
            Browser_exposer.def( 
                "assign"
                , assign_function_type( &::osgWidget::Browser::assign )
                , ( bp::arg("browserImage"), bp::arg("hints")=osgWidget::GeometryHints() ) );
        
        }
        { //::osgWidget::Browser::navigateTo
        
            typedef void ( ::osgWidget::Browser::*navigateTo_function_type )( ::std::string const & ) ;
            
            Browser_exposer.def( 
                "navigateTo"
                , navigateTo_function_type( &::osgWidget::Browser::navigateTo )
                , ( bp::arg("url") ) );
        
        }
        { //::osgWidget::Browser::open
        
            typedef bool ( ::osgWidget::Browser::*open_function_type )( ::std::string const &,::osgWidget::GeometryHints const & ) ;
            
            Browser_exposer.def( 
                "open"
                , open_function_type( &::osgWidget::Browser::open )
                , ( bp::arg("url"), bp::arg("hints")=osgWidget::GeometryHints() ) );
        
        }
    }

}
