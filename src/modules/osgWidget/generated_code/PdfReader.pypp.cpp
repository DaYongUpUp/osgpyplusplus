// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osgwidget.h"
#include "wrap_referenced.h"
#include "pdfreader.pypp.hpp"

namespace bp = boost::python;

void register_PdfReader_class(){

    { //::osgWidget::PdfReader
        typedef bp::class_< osgWidget::PdfReader, osg::ref_ptr< ::osgWidget::PdfReader >, boost::noncopyable > PdfReader_exposer_t;
        PdfReader_exposer_t PdfReader_exposer = PdfReader_exposer_t( "PdfReader", " Convinience class that provides a interactive quad that can be placed directly in the scene.", bp::init< >(" Convinience class that provides a interactive quad that can be placed directly in the scene.") );
        bp::scope PdfReader_scope( PdfReader_exposer );
        PdfReader_exposer.def( bp::init< std::string const &, bp::optional< osgWidget::GeometryHints const & > >(( bp::arg("filename"), bp::arg("hints")=osgWidget::GeometryHints() ), " Convinience class that provides a interactive quad that can be placed directly in the scene.") );
        bp::implicitly_convertible< std::string const &, osgWidget::PdfReader >();
        { //::osgWidget::PdfReader::assign
        
            typedef bool ( ::osgWidget::PdfReader::*assign_function_type )( ::osgWidget::PdfImage *,::osgWidget::GeometryHints const & ) ;
            
            PdfReader_exposer.def( 
                "assign"
                , assign_function_type( &::osgWidget::PdfReader::assign )
                , ( bp::arg("pdfImage"), bp::arg("hints")=osgWidget::GeometryHints() ) );
        
        }
        { //::osgWidget::PdfReader::next
        
            typedef bool ( ::osgWidget::PdfReader::*next_function_type )(  ) ;
            
            PdfReader_exposer.def( 
                "next"
                , next_function_type( &::osgWidget::PdfReader::next ) );
        
        }
        { //::osgWidget::PdfReader::open
        
            typedef bool ( ::osgWidget::PdfReader::*open_function_type )( ::std::string const &,::osgWidget::GeometryHints const & ) ;
            
            PdfReader_exposer.def( 
                "open"
                , open_function_type( &::osgWidget::PdfReader::open )
                , ( bp::arg("filename"), bp::arg("hints")=osgWidget::GeometryHints() ) );
        
        }
        { //::osgWidget::PdfReader::page
        
            typedef bool ( ::osgWidget::PdfReader::*page_function_type )( int ) ;
            
            PdfReader_exposer.def( 
                "page"
                , page_function_type( &::osgWidget::PdfReader::page )
                , ( bp::arg("pageNum") ) );
        
        }
        { //::osgWidget::PdfReader::previous
        
            typedef bool ( ::osgWidget::PdfReader::*previous_function_type )(  ) ;
            
            PdfReader_exposer.def( 
                "previous"
                , previous_function_type( &::osgWidget::PdfReader::previous ) );
        
        }
    }

}
