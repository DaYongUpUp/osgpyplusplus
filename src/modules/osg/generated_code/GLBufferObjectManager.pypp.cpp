// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "glbufferobjectmanager.pypp.hpp"

namespace bp = boost::python;

struct GLBufferObjectManager_wrapper : osg::GLBufferObjectManager, bp::wrapper< osg::GLBufferObjectManager > {

    GLBufferObjectManager_wrapper(unsigned int contextID )
    : osg::GLBufferObjectManager( contextID )
      , bp::wrapper< osg::GLBufferObjectManager >(){
        // constructor
    
    }

    virtual void setThreadSafeRefUnref( bool threadSafe ) {
        if( bp::override func_setThreadSafeRefUnref = this->get_override( "setThreadSafeRefUnref" ) )
            func_setThreadSafeRefUnref( threadSafe );
        else{
            this->osg::Referenced::setThreadSafeRefUnref( threadSafe );
        }
    }
    
    void default_setThreadSafeRefUnref( bool threadSafe ) {
        osg::Referenced::setThreadSafeRefUnref( threadSafe );
    }

};

void register_GLBufferObjectManager_class(){

    { //::osg::GLBufferObjectManager
        typedef bp::class_< GLBufferObjectManager_wrapper, bp::bases< osg::Referenced >, boost::noncopyable > GLBufferObjectManager_exposer_t;
        GLBufferObjectManager_exposer_t GLBufferObjectManager_exposer = GLBufferObjectManager_exposer_t( "GLBufferObjectManager", bp::init< unsigned int >(( bp::arg("contextID") )) );
        bp::scope GLBufferObjectManager_scope( GLBufferObjectManager_exposer );
        bp::implicitly_convertible< unsigned int, osg::GLBufferObjectManager >();
        { //::osg::GLBufferObjectManager::deleteAllGLBufferObjects
        
            typedef void ( ::osg::GLBufferObjectManager::*deleteAllGLBufferObjects_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "deleteAllGLBufferObjects"
                , deleteAllGLBufferObjects_function_type( &::osg::GLBufferObjectManager::deleteAllGLBufferObjects ) );
        
        }
        { //::osg::GLBufferObjectManager::discardAllDeletedGLBufferObjects
        
            typedef void ( ::osg::GLBufferObjectManager::*discardAllDeletedGLBufferObjects_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "discardAllDeletedGLBufferObjects"
                , discardAllDeletedGLBufferObjects_function_type( &::osg::GLBufferObjectManager::discardAllDeletedGLBufferObjects ) );
        
        }
        { //::osg::GLBufferObjectManager::discardAllGLBufferObjects
        
            typedef void ( ::osg::GLBufferObjectManager::*discardAllGLBufferObjects_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "discardAllGLBufferObjects"
                , discardAllGLBufferObjects_function_type( &::osg::GLBufferObjectManager::discardAllGLBufferObjects ) );
        
        }
        { //::osg::GLBufferObjectManager::flushAllDeletedGLBufferObjects
        
            typedef void ( ::osg::GLBufferObjectManager::*flushAllDeletedGLBufferObjects_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "flushAllDeletedGLBufferObjects"
                , flushAllDeletedGLBufferObjects_function_type( &::osg::GLBufferObjectManager::flushAllDeletedGLBufferObjects ) );
        
        }
        { //::osg::GLBufferObjectManager::flushDeletedGLBufferObjects
        
            typedef void ( ::osg::GLBufferObjectManager::*flushDeletedGLBufferObjects_function_type)( double,double & ) ;
            
            GLBufferObjectManager_exposer.def( 
                "flushDeletedGLBufferObjects"
                , flushDeletedGLBufferObjects_function_type( &::osg::GLBufferObjectManager::flushDeletedGLBufferObjects )
                , ( bp::arg("currentTime"), bp::arg("availableTime") ) );
        
        }
        { //::osg::GLBufferObjectManager::generateGLBufferObject
        
            typedef ::osg::GLBufferObject * ( ::osg::GLBufferObjectManager::*generateGLBufferObject_function_type)( ::osg::BufferObject const * ) ;
            
            GLBufferObjectManager_exposer.def( 
                "generateGLBufferObject"
                , generateGLBufferObject_function_type( &::osg::GLBufferObjectManager::generateGLBufferObject )
                , ( bp::arg("bufferObject") )
                    /* undefined call policies */ );
        
        }
        { //::osg::GLBufferObjectManager::getApplyTime
        
            typedef double & ( ::osg::GLBufferObjectManager::*getApplyTime_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "getApplyTime"
                , getApplyTime_function_type( &::osg::GLBufferObjectManager::getApplyTime )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::GLBufferObjectManager::getContextID
        
            typedef unsigned int ( ::osg::GLBufferObjectManager::*getContextID_function_type)(  ) const;
            
            GLBufferObjectManager_exposer.def( 
                "getContextID"
                , getContextID_function_type( &::osg::GLBufferObjectManager::getContextID ) );
        
        }
        { //::osg::GLBufferObjectManager::getCurrGLBufferObjectPoolSize
        
            typedef unsigned int & ( ::osg::GLBufferObjectManager::*getCurrGLBufferObjectPoolSize_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "getCurrGLBufferObjectPoolSize"
                , getCurrGLBufferObjectPoolSize_function_type( &::osg::GLBufferObjectManager::getCurrGLBufferObjectPoolSize )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::GLBufferObjectManager::getCurrGLBufferObjectPoolSize
        
            typedef unsigned int ( ::osg::GLBufferObjectManager::*getCurrGLBufferObjectPoolSize_function_type)(  ) const;
            
            GLBufferObjectManager_exposer.def( 
                "getCurrGLBufferObjectPoolSize"
                , getCurrGLBufferObjectPoolSize_function_type( &::osg::GLBufferObjectManager::getCurrGLBufferObjectPoolSize ) );
        
        }
        { //::osg::GLBufferObjectManager::getDeleteTime
        
            typedef double & ( ::osg::GLBufferObjectManager::*getDeleteTime_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "getDeleteTime"
                , getDeleteTime_function_type( &::osg::GLBufferObjectManager::getDeleteTime )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::GLBufferObjectManager::getFrameNumber
        
            typedef unsigned int & ( ::osg::GLBufferObjectManager::*getFrameNumber_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "getFrameNumber"
                , getFrameNumber_function_type( &::osg::GLBufferObjectManager::getFrameNumber )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::GLBufferObjectManager::getGLBufferObjectManager
        
            typedef ::osg::ref_ptr< osg::GLBufferObjectManager > & ( *getGLBufferObjectManager_function_type )( unsigned int );
            
            GLBufferObjectManager_exposer.def( 
                "getGLBufferObjectManager"
                , getGLBufferObjectManager_function_type( &::osg::GLBufferObjectManager::getGLBufferObjectManager )
                , ( bp::arg("contextID") )
                , bp::return_internal_reference< >() );
        
        }
        { //::osg::GLBufferObjectManager::getGLBufferObjectSet
        
            typedef ::osg::GLBufferObjectSet * ( ::osg::GLBufferObjectManager::*getGLBufferObjectSet_function_type)( ::osg::BufferObjectProfile const & ) ;
            
            GLBufferObjectManager_exposer.def( 
                "getGLBufferObjectSet"
                , getGLBufferObjectSet_function_type( &::osg::GLBufferObjectManager::getGLBufferObjectSet )
                , ( bp::arg("profile") )
                    /* undefined call policies */ );
        
        }
        { //::osg::GLBufferObjectManager::getGenerateTime
        
            typedef double & ( ::osg::GLBufferObjectManager::*getGenerateTime_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "getGenerateTime"
                , getGenerateTime_function_type( &::osg::GLBufferObjectManager::getGenerateTime )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::GLBufferObjectManager::getMaxGLBufferObjectPoolSize
        
            typedef unsigned int ( ::osg::GLBufferObjectManager::*getMaxGLBufferObjectPoolSize_function_type)(  ) const;
            
            GLBufferObjectManager_exposer.def( 
                "getMaxGLBufferObjectPoolSize"
                , getMaxGLBufferObjectPoolSize_function_type( &::osg::GLBufferObjectManager::getMaxGLBufferObjectPoolSize ) );
        
        }
        { //::osg::GLBufferObjectManager::getNumberActiveGLBufferObjects
        
            typedef unsigned int & ( ::osg::GLBufferObjectManager::*getNumberActiveGLBufferObjects_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "getNumberActiveGLBufferObjects"
                , getNumberActiveGLBufferObjects_function_type( &::osg::GLBufferObjectManager::getNumberActiveGLBufferObjects )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::GLBufferObjectManager::getNumberActiveGLBufferObjects
        
            typedef unsigned int ( ::osg::GLBufferObjectManager::*getNumberActiveGLBufferObjects_function_type)(  ) const;
            
            GLBufferObjectManager_exposer.def( 
                "getNumberActiveGLBufferObjects"
                , getNumberActiveGLBufferObjects_function_type( &::osg::GLBufferObjectManager::getNumberActiveGLBufferObjects ) );
        
        }
        { //::osg::GLBufferObjectManager::getNumberApplied
        
            typedef unsigned int & ( ::osg::GLBufferObjectManager::*getNumberApplied_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "getNumberApplied"
                , getNumberApplied_function_type( &::osg::GLBufferObjectManager::getNumberApplied )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::GLBufferObjectManager::getNumberDeleted
        
            typedef unsigned int & ( ::osg::GLBufferObjectManager::*getNumberDeleted_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "getNumberDeleted"
                , getNumberDeleted_function_type( &::osg::GLBufferObjectManager::getNumberDeleted )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::GLBufferObjectManager::getNumberFrames
        
            typedef unsigned int & ( ::osg::GLBufferObjectManager::*getNumberFrames_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "getNumberFrames"
                , getNumberFrames_function_type( &::osg::GLBufferObjectManager::getNumberFrames )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::GLBufferObjectManager::getNumberGenerated
        
            typedef unsigned int & ( ::osg::GLBufferObjectManager::*getNumberGenerated_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "getNumberGenerated"
                , getNumberGenerated_function_type( &::osg::GLBufferObjectManager::getNumberGenerated )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::GLBufferObjectManager::getNumberOrphanedGLBufferObjects
        
            typedef unsigned int & ( ::osg::GLBufferObjectManager::*getNumberOrphanedGLBufferObjects_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "getNumberOrphanedGLBufferObjects"
                , getNumberOrphanedGLBufferObjects_function_type( &::osg::GLBufferObjectManager::getNumberOrphanedGLBufferObjects )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::GLBufferObjectManager::getNumberOrphanedGLBufferObjects
        
            typedef unsigned int ( ::osg::GLBufferObjectManager::*getNumberOrphanedGLBufferObjects_function_type)(  ) const;
            
            GLBufferObjectManager_exposer.def( 
                "getNumberOrphanedGLBufferObjects"
                , getNumberOrphanedGLBufferObjects_function_type( &::osg::GLBufferObjectManager::getNumberOrphanedGLBufferObjects ) );
        
        }
        { //::osg::GLBufferObjectManager::handlePendingOrphandedGLBufferObjects
        
            typedef void ( ::osg::GLBufferObjectManager::*handlePendingOrphandedGLBufferObjects_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "handlePendingOrphandedGLBufferObjects"
                , handlePendingOrphandedGLBufferObjects_function_type( &::osg::GLBufferObjectManager::handlePendingOrphandedGLBufferObjects ) );
        
        }
        { //::osg::GLBufferObjectManager::hasSpace
        
            typedef bool ( ::osg::GLBufferObjectManager::*hasSpace_function_type)( unsigned int ) const;
            
            GLBufferObjectManager_exposer.def( 
                "hasSpace"
                , hasSpace_function_type( &::osg::GLBufferObjectManager::hasSpace )
                , ( bp::arg("size") ) );
        
        }
        { //::osg::GLBufferObjectManager::makeSpace
        
            typedef bool ( ::osg::GLBufferObjectManager::*makeSpace_function_type)( unsigned int ) ;
            
            GLBufferObjectManager_exposer.def( 
                "makeSpace"
                , makeSpace_function_type( &::osg::GLBufferObjectManager::makeSpace )
                , ( bp::arg("size") ) );
        
        }
        { //::osg::GLBufferObjectManager::newFrame
        
            typedef void ( ::osg::GLBufferObjectManager::*newFrame_function_type)( ::osg::FrameStamp * ) ;
            
            GLBufferObjectManager_exposer.def( 
                "newFrame"
                , newFrame_function_type( &::osg::GLBufferObjectManager::newFrame )
                , ( bp::arg("fs") ) );
        
        }
        { //::osg::GLBufferObjectManager::recomputeStats
        
            typedef void ( ::osg::GLBufferObjectManager::*recomputeStats_function_type)( ::std::ostream & ) ;
            
            GLBufferObjectManager_exposer.def( 
                "recomputeStats"
                , recomputeStats_function_type( &::osg::GLBufferObjectManager::recomputeStats )
                , ( bp::arg("out") ) );
        
        }
        { //::osg::GLBufferObjectManager::releaseGLBufferObject
        
            typedef void ( ::osg::GLBufferObjectManager::*releaseGLBufferObject_function_type)( ::osg::GLBufferObject * ) ;
            
            GLBufferObjectManager_exposer.def( 
                "releaseGLBufferObject"
                , releaseGLBufferObject_function_type( &::osg::GLBufferObjectManager::releaseGLBufferObject )
                , ( bp::arg("to") ) );
        
        }
        { //::osg::GLBufferObjectManager::reportStats
        
            typedef void ( ::osg::GLBufferObjectManager::*reportStats_function_type)( ::std::ostream & ) ;
            
            GLBufferObjectManager_exposer.def( 
                "reportStats"
                , reportStats_function_type( &::osg::GLBufferObjectManager::reportStats )
                , ( bp::arg("out") ) );
        
        }
        { //::osg::GLBufferObjectManager::resetStats
        
            typedef void ( ::osg::GLBufferObjectManager::*resetStats_function_type)(  ) ;
            
            GLBufferObjectManager_exposer.def( 
                "resetStats"
                , resetStats_function_type( &::osg::GLBufferObjectManager::resetStats ) );
        
        }
        { //::osg::GLBufferObjectManager::setCurrGLBufferObjectPoolSize
        
            typedef void ( ::osg::GLBufferObjectManager::*setCurrGLBufferObjectPoolSize_function_type)( unsigned int ) ;
            
            GLBufferObjectManager_exposer.def( 
                "setCurrGLBufferObjectPoolSize"
                , setCurrGLBufferObjectPoolSize_function_type( &::osg::GLBufferObjectManager::setCurrGLBufferObjectPoolSize )
                , ( bp::arg("size") ) );
        
        }
        { //::osg::GLBufferObjectManager::setMaxGLBufferObjectPoolSize
        
            typedef void ( ::osg::GLBufferObjectManager::*setMaxGLBufferObjectPoolSize_function_type)( unsigned int ) ;
            
            GLBufferObjectManager_exposer.def( 
                "setMaxGLBufferObjectPoolSize"
                , setMaxGLBufferObjectPoolSize_function_type( &::osg::GLBufferObjectManager::setMaxGLBufferObjectPoolSize )
                , ( bp::arg("size") ) );
        
        }
        { //::osg::GLBufferObjectManager::setNumberActiveGLBufferObjects
        
            typedef void ( ::osg::GLBufferObjectManager::*setNumberActiveGLBufferObjects_function_type)( unsigned int ) ;
            
            GLBufferObjectManager_exposer.def( 
                "setNumberActiveGLBufferObjects"
                , setNumberActiveGLBufferObjects_function_type( &::osg::GLBufferObjectManager::setNumberActiveGLBufferObjects )
                , ( bp::arg("size") ) );
        
        }
        { //::osg::GLBufferObjectManager::setNumberOrphanedGLBufferObjects
        
            typedef void ( ::osg::GLBufferObjectManager::*setNumberOrphanedGLBufferObjects_function_type)( unsigned int ) ;
            
            GLBufferObjectManager_exposer.def( 
                "setNumberOrphanedGLBufferObjects"
                , setNumberOrphanedGLBufferObjects_function_type( &::osg::GLBufferObjectManager::setNumberOrphanedGLBufferObjects )
                , ( bp::arg("size") ) );
        
        }
        { //::osg::Referenced::setThreadSafeRefUnref
        
            typedef void ( ::osg::Referenced::*setThreadSafeRefUnref_function_type)( bool ) ;
            typedef void ( GLBufferObjectManager_wrapper::*default_setThreadSafeRefUnref_function_type)( bool ) ;
            
            GLBufferObjectManager_exposer.def( 
                "setThreadSafeRefUnref"
                , setThreadSafeRefUnref_function_type(&::osg::Referenced::setThreadSafeRefUnref)
                , default_setThreadSafeRefUnref_function_type(&GLBufferObjectManager_wrapper::default_setThreadSafeRefUnref)
                , ( bp::arg("threadSafe") ) );
        
        }
        GLBufferObjectManager_exposer.staticmethod( "getGLBufferObjectManager" );
    }

}
