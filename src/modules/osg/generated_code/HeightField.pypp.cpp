// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "heightfield.pypp.hpp"

namespace bp = boost::python;

struct HeightField_wrapper : osg::HeightField, bp::wrapper< osg::HeightField > {

    HeightField_wrapper( )
    : osg::HeightField( )
      , bp::wrapper< osg::HeightField >(){
        // null constructor
    
    }

    HeightField_wrapper(::osg::HeightField const & mesh, ::osg::CopyOp const & copyop=SHALLOW_COPY )
    : osg::HeightField( boost::ref(mesh), boost::ref(copyop) )
      , bp::wrapper< osg::HeightField >(){
        // constructor
    
    }

    virtual void accept( ::osg::ShapeVisitor & sv ) {
        if( bp::override func_accept = this->get_override( "accept" ) )
            func_accept( boost::ref(sv) );
        else{
            this->osg::HeightField::accept( boost::ref(sv) );
        }
    }
    
    void default_accept( ::osg::ShapeVisitor & sv ) {
        osg::HeightField::accept( boost::ref(sv) );
    }

    virtual void accept( ::osg::ConstShapeVisitor & csv ) const  {
        if( bp::override func_accept = this->get_override( "accept" ) )
            func_accept( boost::ref(csv) );
        else{
            this->osg::HeightField::accept( boost::ref(csv) );
        }
    }
    
    void default_accept( ::osg::ConstShapeVisitor & csv ) const  {
        osg::HeightField::accept( boost::ref(csv) );
    }

    virtual char const * className(  ) const  {
        if( bp::override func_className = this->get_override( "className" ) )
            return func_className(  );
        else{
            return this->osg::HeightField::className(  );
        }
    }
    
    char const * default_className(  ) const  {
        return osg::HeightField::className( );
    }

    virtual ::osg::Object * clone( ::osg::CopyOp const & copyop ) const  {
        if( bp::override func_clone = this->get_override( "clone" ) )
            return func_clone( boost::ref(copyop) );
        else{
            return this->osg::HeightField::clone( boost::ref(copyop) );
        }
    }
    
    ::osg::Object * default_clone( ::osg::CopyOp const & copyop ) const  {
        return osg::HeightField::clone( boost::ref(copyop) );
    }

    virtual ::osg::Object * cloneType(  ) const  {
        if( bp::override func_cloneType = this->get_override( "cloneType" ) )
            return func_cloneType(  );
        else{
            return this->osg::HeightField::cloneType(  );
        }
    }
    
    ::osg::Object * default_cloneType(  ) const  {
        return osg::HeightField::cloneType( );
    }

    virtual bool isSameKindAs( ::osg::Object const * obj ) const  {
        if( bp::override func_isSameKindAs = this->get_override( "isSameKindAs" ) )
            return func_isSameKindAs( boost::python::ptr(obj) );
        else{
            return this->osg::HeightField::isSameKindAs( boost::python::ptr(obj) );
        }
    }
    
    bool default_isSameKindAs( ::osg::Object const * obj ) const  {
        return osg::HeightField::isSameKindAs( boost::python::ptr(obj) );
    }

    virtual char const * libraryName(  ) const  {
        if( bp::override func_libraryName = this->get_override( "libraryName" ) )
            return func_libraryName(  );
        else{
            return this->osg::HeightField::libraryName(  );
        }
    }
    
    char const * default_libraryName(  ) const  {
        return osg::HeightField::libraryName( );
    }

    virtual void computeDataVariance(  ) {
        if( bp::override func_computeDataVariance = this->get_override( "computeDataVariance" ) )
            func_computeDataVariance(  );
        else{
            this->osg::Object::computeDataVariance(  );
        }
    }
    
    void default_computeDataVariance(  ) {
        osg::Object::computeDataVariance( );
    }

    virtual ::osg::Referenced * getUserData(  ) {
        if( bp::override func_getUserData = this->get_override( "getUserData" ) )
            return func_getUserData(  );
        else{
            return this->osg::Object::getUserData(  );
        }
    }
    
    ::osg::Referenced * default_getUserData(  ) {
        return osg::Object::getUserData( );
    }

    virtual ::osg::Referenced const * getUserData(  ) const  {
        if( bp::override func_getUserData = this->get_override( "getUserData" ) )
            return func_getUserData(  );
        else{
            return this->osg::Object::getUserData(  );
        }
    }
    
    ::osg::Referenced const * default_getUserData(  ) const  {
        return osg::Object::getUserData( );
    }

    virtual void resizeGLObjectBuffers( unsigned int arg0 ) {
        if( bp::override func_resizeGLObjectBuffers = this->get_override( "resizeGLObjectBuffers" ) )
            func_resizeGLObjectBuffers( arg0 );
        else{
            this->osg::Object::resizeGLObjectBuffers( arg0 );
        }
    }
    
    void default_resizeGLObjectBuffers( unsigned int arg0 ) {
        osg::Object::resizeGLObjectBuffers( arg0 );
    }

    virtual void setName( ::std::string const & name ) {
        if( bp::override func_setName = this->get_override( "setName" ) )
            func_setName( name );
        else{
            this->osg::Object::setName( name );
        }
    }
    
    void default_setName( ::std::string const & name ) {
        osg::Object::setName( name );
    }

    virtual void setThreadSafeRefUnref( bool threadSafe ) {
        if( bp::override func_setThreadSafeRefUnref = this->get_override( "setThreadSafeRefUnref" ) )
            func_setThreadSafeRefUnref( threadSafe );
        else{
            this->osg::Object::setThreadSafeRefUnref( threadSafe );
        }
    }
    
    void default_setThreadSafeRefUnref( bool threadSafe ) {
        osg::Object::setThreadSafeRefUnref( threadSafe );
    }

    virtual void setUserData( ::osg::Referenced * obj ) {
        if( bp::override func_setUserData = this->get_override( "setUserData" ) )
            func_setUserData( boost::python::ptr(obj) );
        else{
            this->osg::Object::setUserData( boost::python::ptr(obj) );
        }
    }
    
    void default_setUserData( ::osg::Referenced * obj ) {
        osg::Object::setUserData( boost::python::ptr(obj) );
    }

};

void register_HeightField_class(){

    { //::osg::HeightField
        typedef bp::class_< HeightField_wrapper, bp::bases< osg::Shape >, boost::noncopyable > HeightField_exposer_t;
        HeightField_exposer_t HeightField_exposer = HeightField_exposer_t( "HeightField", bp::no_init );
        bp::scope HeightField_scope( HeightField_exposer );
        HeightField_exposer.def( bp::init< >() );
        HeightField_exposer.def( bp::init< osg::HeightField const &, bp::optional< osg::CopyOp const & > >(( bp::arg("mesh"), bp::arg("copyop")=SHALLOW_COPY )) );
        bp::implicitly_convertible< osg::HeightField const &, osg::HeightField >();
        { //::osg::HeightField::accept
        
            typedef void ( ::osg::HeightField::*accept_function_type)( ::osg::ShapeVisitor & ) ;
            typedef void ( HeightField_wrapper::*default_accept_function_type)( ::osg::ShapeVisitor & ) ;
            
            HeightField_exposer.def( 
                "accept"
                , accept_function_type(&::osg::HeightField::accept)
                , default_accept_function_type(&HeightField_wrapper::default_accept)
                , ( bp::arg("sv") ) );
        
        }
        { //::osg::HeightField::accept
        
            typedef void ( ::osg::HeightField::*accept_function_type)( ::osg::ConstShapeVisitor & ) const;
            typedef void ( HeightField_wrapper::*default_accept_function_type)( ::osg::ConstShapeVisitor & ) const;
            
            HeightField_exposer.def( 
                "accept"
                , accept_function_type(&::osg::HeightField::accept)
                , default_accept_function_type(&HeightField_wrapper::default_accept)
                , ( bp::arg("csv") ) );
        
        }
        { //::osg::HeightField::allocate
        
            typedef void ( ::osg::HeightField::*allocate_function_type)( unsigned int,unsigned int ) ;
            
            HeightField_exposer.def( 
                "allocate"
                , allocate_function_type( &::osg::HeightField::allocate )
                , ( bp::arg("numColumns"), bp::arg("numRows") ) );
        
        }
        { //::osg::HeightField::className
        
            typedef char const * ( ::osg::HeightField::*className_function_type)(  ) const;
            typedef char const * ( HeightField_wrapper::*default_className_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "className"
                , className_function_type(&::osg::HeightField::className)
                , default_className_function_type(&HeightField_wrapper::default_className) );
        
        }
        { //::osg::HeightField::clone
        
            typedef ::osg::Object * ( ::osg::HeightField::*clone_function_type)( ::osg::CopyOp const & ) const;
            typedef ::osg::Object * ( HeightField_wrapper::*default_clone_function_type)( ::osg::CopyOp const & ) const;
            
            HeightField_exposer.def( 
                "clone"
                , clone_function_type(&::osg::HeightField::clone)
                , default_clone_function_type(&HeightField_wrapper::default_clone)
                , ( bp::arg("copyop") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::osg::HeightField::cloneType
        
            typedef ::osg::Object * ( ::osg::HeightField::*cloneType_function_type)(  ) const;
            typedef ::osg::Object * ( HeightField_wrapper::*default_cloneType_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "cloneType"
                , cloneType_function_type(&::osg::HeightField::cloneType)
                , default_cloneType_function_type(&HeightField_wrapper::default_cloneType)
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::osg::HeightField::computeRotationMatrix
        
            typedef ::osg::Matrix ( ::osg::HeightField::*computeRotationMatrix_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "computeRotationMatrix"
                , computeRotationMatrix_function_type( &::osg::HeightField::computeRotationMatrix ) );
        
        }
        { //::osg::HeightField::getBorderWidth
        
            typedef unsigned int ( ::osg::HeightField::*getBorderWidth_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "getBorderWidth"
                , getBorderWidth_function_type( &::osg::HeightField::getBorderWidth ) );
        
        }
        { //::osg::HeightField::getFloatArray
        
            typedef ::osg::FloatArray * ( ::osg::HeightField::*getFloatArray_function_type)(  ) ;
            
            HeightField_exposer.def( 
                "getFloatArray"
                , getFloatArray_function_type( &::osg::HeightField::getFloatArray )
                    /* undefined call policies */ );
        
        }
        { //::osg::HeightField::getFloatArray
        
            typedef ::osg::FloatArray const * ( ::osg::HeightField::*getFloatArray_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "getFloatArray"
                , getFloatArray_function_type( &::osg::HeightField::getFloatArray )
                    /* undefined call policies */ );
        
        }
        { //::osg::HeightField::getHeight
        
            typedef float & ( ::osg::HeightField::*getHeight_function_type)( unsigned int,unsigned int ) ;
            
            HeightField_exposer.def( 
                "getHeight"
                , getHeight_function_type( &::osg::HeightField::getHeight )
                , ( bp::arg("c"), bp::arg("r") )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::HeightField::getHeight
        
            typedef float ( ::osg::HeightField::*getHeight_function_type)( unsigned int,unsigned int ) const;
            
            HeightField_exposer.def( 
                "getHeight"
                , getHeight_function_type( &::osg::HeightField::getHeight )
                , ( bp::arg("c"), bp::arg("r") ) );
        
        }
        { //::osg::HeightField::getHeightDelta
        
            typedef ::osg::Vec2 ( ::osg::HeightField::*getHeightDelta_function_type)( unsigned int,unsigned int ) const;
            
            HeightField_exposer.def( 
                "getHeightDelta"
                , getHeightDelta_function_type( &::osg::HeightField::getHeightDelta )
                , ( bp::arg("c"), bp::arg("r") ) );
        
        }
        { //::osg::HeightField::getHeightList
        
            typedef ::std::vector< float > & ( ::osg::HeightField::*getHeightList_function_type)(  ) ;
            
            HeightField_exposer.def( 
                "getHeightList"
                , getHeightList_function_type( &::osg::HeightField::getHeightList )
                , bp::return_internal_reference< >() );
        
        }
        { //::osg::HeightField::getHeightList
        
            typedef ::std::vector< float > const & ( ::osg::HeightField::*getHeightList_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "getHeightList"
                , getHeightList_function_type( &::osg::HeightField::getHeightList )
                , bp::return_internal_reference< >() );
        
        }
        { //::osg::HeightField::getNormal
        
            typedef ::osg::Vec3 ( ::osg::HeightField::*getNormal_function_type)( unsigned int,unsigned int ) const;
            
            HeightField_exposer.def( 
                "getNormal"
                , getNormal_function_type( &::osg::HeightField::getNormal )
                , ( bp::arg("c"), bp::arg("r") ) );
        
        }
        { //::osg::HeightField::getNumColumns
        
            typedef unsigned int ( ::osg::HeightField::*getNumColumns_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "getNumColumns"
                , getNumColumns_function_type( &::osg::HeightField::getNumColumns ) );
        
        }
        { //::osg::HeightField::getNumRows
        
            typedef unsigned int ( ::osg::HeightField::*getNumRows_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "getNumRows"
                , getNumRows_function_type( &::osg::HeightField::getNumRows ) );
        
        }
        { //::osg::HeightField::getOrigin
        
            typedef ::osg::Vec3 const & ( ::osg::HeightField::*getOrigin_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "getOrigin"
                , getOrigin_function_type( &::osg::HeightField::getOrigin )
                , bp::return_internal_reference< >() );
        
        }
        { //::osg::HeightField::getRotation
        
            typedef ::osg::Quat const & ( ::osg::HeightField::*getRotation_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "getRotation"
                , getRotation_function_type( &::osg::HeightField::getRotation )
                , bp::return_internal_reference< >() );
        
        }
        { //::osg::HeightField::getSkirtHeight
        
            typedef float ( ::osg::HeightField::*getSkirtHeight_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "getSkirtHeight"
                , getSkirtHeight_function_type( &::osg::HeightField::getSkirtHeight ) );
        
        }
        { //::osg::HeightField::getVertex
        
            typedef ::osg::Vec3 ( ::osg::HeightField::*getVertex_function_type)( unsigned int,unsigned int ) const;
            
            HeightField_exposer.def( 
                "getVertex"
                , getVertex_function_type( &::osg::HeightField::getVertex )
                , ( bp::arg("c"), bp::arg("r") ) );
        
        }
        { //::osg::HeightField::getXInterval
        
            typedef float ( ::osg::HeightField::*getXInterval_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "getXInterval"
                , getXInterval_function_type( &::osg::HeightField::getXInterval ) );
        
        }
        { //::osg::HeightField::getYInterval
        
            typedef float ( ::osg::HeightField::*getYInterval_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "getYInterval"
                , getYInterval_function_type( &::osg::HeightField::getYInterval ) );
        
        }
        { //::osg::HeightField::isSameKindAs
        
            typedef bool ( ::osg::HeightField::*isSameKindAs_function_type)( ::osg::Object const * ) const;
            typedef bool ( HeightField_wrapper::*default_isSameKindAs_function_type)( ::osg::Object const * ) const;
            
            HeightField_exposer.def( 
                "isSameKindAs"
                , isSameKindAs_function_type(&::osg::HeightField::isSameKindAs)
                , default_isSameKindAs_function_type(&HeightField_wrapper::default_isSameKindAs)
                , ( bp::arg("obj") ) );
        
        }
        { //::osg::HeightField::libraryName
        
            typedef char const * ( ::osg::HeightField::*libraryName_function_type)(  ) const;
            typedef char const * ( HeightField_wrapper::*default_libraryName_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "libraryName"
                , libraryName_function_type(&::osg::HeightField::libraryName)
                , default_libraryName_function_type(&HeightField_wrapper::default_libraryName) );
        
        }
        { //::osg::HeightField::setBorderWidth
        
            typedef void ( ::osg::HeightField::*setBorderWidth_function_type)( unsigned int ) ;
            
            HeightField_exposer.def( 
                "setBorderWidth"
                , setBorderWidth_function_type( &::osg::HeightField::setBorderWidth )
                , ( bp::arg("borderWidth") ) );
        
        }
        { //::osg::HeightField::setHeight
        
            typedef void ( ::osg::HeightField::*setHeight_function_type)( unsigned int,unsigned int,float ) ;
            
            HeightField_exposer.def( 
                "setHeight"
                , setHeight_function_type( &::osg::HeightField::setHeight )
                , ( bp::arg("c"), bp::arg("r"), bp::arg("value") ) );
        
        }
        { //::osg::HeightField::setOrigin
        
            typedef void ( ::osg::HeightField::*setOrigin_function_type)( ::osg::Vec3 const & ) ;
            
            HeightField_exposer.def( 
                "setOrigin"
                , setOrigin_function_type( &::osg::HeightField::setOrigin )
                , ( bp::arg("origin") ) );
        
        }
        { //::osg::HeightField::setRotation
        
            typedef void ( ::osg::HeightField::*setRotation_function_type)( ::osg::Quat const & ) ;
            
            HeightField_exposer.def( 
                "setRotation"
                , setRotation_function_type( &::osg::HeightField::setRotation )
                , ( bp::arg("quat") ) );
        
        }
        { //::osg::HeightField::setSkirtHeight
        
            typedef void ( ::osg::HeightField::*setSkirtHeight_function_type)( float ) ;
            
            HeightField_exposer.def( 
                "setSkirtHeight"
                , setSkirtHeight_function_type( &::osg::HeightField::setSkirtHeight )
                , ( bp::arg("skirtHeight") ) );
        
        }
        { //::osg::HeightField::setXInterval
        
            typedef void ( ::osg::HeightField::*setXInterval_function_type)( float ) ;
            
            HeightField_exposer.def( 
                "setXInterval"
                , setXInterval_function_type( &::osg::HeightField::setXInterval )
                , ( bp::arg("dx") ) );
        
        }
        { //::osg::HeightField::setYInterval
        
            typedef void ( ::osg::HeightField::*setYInterval_function_type)( float ) ;
            
            HeightField_exposer.def( 
                "setYInterval"
                , setYInterval_function_type( &::osg::HeightField::setYInterval )
                , ( bp::arg("dy") ) );
        
        }
        { //::osg::HeightField::zeroRotation
        
            typedef bool ( ::osg::HeightField::*zeroRotation_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "zeroRotation"
                , zeroRotation_function_type( &::osg::HeightField::zeroRotation ) );
        
        }
        { //::osg::Object::computeDataVariance
        
            typedef void ( ::osg::Object::*computeDataVariance_function_type)(  ) ;
            typedef void ( HeightField_wrapper::*default_computeDataVariance_function_type)(  ) ;
            
            HeightField_exposer.def( 
                "computeDataVariance"
                , computeDataVariance_function_type(&::osg::Object::computeDataVariance)
                , default_computeDataVariance_function_type(&HeightField_wrapper::default_computeDataVariance) );
        
        }
        { //::osg::Object::getUserData
        
            typedef ::osg::Referenced * ( ::osg::Object::*getUserData_function_type)(  ) ;
            typedef ::osg::Referenced * ( HeightField_wrapper::*default_getUserData_function_type)(  ) ;
            
            HeightField_exposer.def( 
                "getUserData"
                , getUserData_function_type(&::osg::Object::getUserData)
                , default_getUserData_function_type(&HeightField_wrapper::default_getUserData)
                , bp::return_internal_reference< >() );
        
        }
        { //::osg::Object::getUserData
        
            typedef ::osg::Referenced const * ( ::osg::Object::*getUserData_function_type)(  ) const;
            typedef ::osg::Referenced const * ( HeightField_wrapper::*default_getUserData_function_type)(  ) const;
            
            HeightField_exposer.def( 
                "getUserData"
                , getUserData_function_type(&::osg::Object::getUserData)
                , default_getUserData_function_type(&HeightField_wrapper::default_getUserData)
                , bp::return_internal_reference< >() );
        
        }
        { //::osg::Object::resizeGLObjectBuffers
        
            typedef void ( ::osg::Object::*resizeGLObjectBuffers_function_type)( unsigned int ) ;
            typedef void ( HeightField_wrapper::*default_resizeGLObjectBuffers_function_type)( unsigned int ) ;
            
            HeightField_exposer.def( 
                "resizeGLObjectBuffers"
                , resizeGLObjectBuffers_function_type(&::osg::Object::resizeGLObjectBuffers)
                , default_resizeGLObjectBuffers_function_type(&HeightField_wrapper::default_resizeGLObjectBuffers)
                , ( bp::arg("arg0") ) );
        
        }
        { //::osg::Object::setName
        
            typedef void ( ::osg::Object::*setName_function_type)( ::std::string const & ) ;
            typedef void ( HeightField_wrapper::*default_setName_function_type)( ::std::string const & ) ;
            
            HeightField_exposer.def( 
                "setName"
                , setName_function_type(&::osg::Object::setName)
                , default_setName_function_type(&HeightField_wrapper::default_setName)
                , ( bp::arg("name") ) );
        
        }
        { //::osg::Object::setName
        
            typedef void ( ::osg::Object::*setName_function_type)( char const * ) ;
            
            HeightField_exposer.def( 
                "setName"
                , setName_function_type( &::osg::Object::setName )
                , ( bp::arg("name") ) );
        
        }
        { //::osg::Object::setThreadSafeRefUnref
        
            typedef void ( ::osg::Object::*setThreadSafeRefUnref_function_type)( bool ) ;
            typedef void ( HeightField_wrapper::*default_setThreadSafeRefUnref_function_type)( bool ) ;
            
            HeightField_exposer.def( 
                "setThreadSafeRefUnref"
                , setThreadSafeRefUnref_function_type(&::osg::Object::setThreadSafeRefUnref)
                , default_setThreadSafeRefUnref_function_type(&HeightField_wrapper::default_setThreadSafeRefUnref)
                , ( bp::arg("threadSafe") ) );
        
        }
        { //::osg::Object::setUserData
        
            typedef void ( ::osg::Object::*setUserData_function_type)( ::osg::Referenced * ) ;
            typedef void ( HeightField_wrapper::*default_setUserData_function_type)( ::osg::Referenced * ) ;
            
            HeightField_exposer.def( 
                "setUserData"
                , setUserData_function_type(&::osg::Object::setUserData)
                , default_setUserData_function_type(&HeightField_wrapper::default_setUserData)
                , ( bp::arg("obj") ) );
        
        }
    }

}
