// This file has been generated by Py++.

#include "boost/python.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "wrap_osg.h"
#include "texturemodelist.pypp.hpp"

namespace bp = boost::python;

void register_TextureModeList_class(){

    { //::std::vector< std::map< unsigned int, unsigned int > >
        typedef bp::class_< std::vector< std::map< unsigned int, unsigned int > > > TextureModeList_exposer_t;
        TextureModeList_exposer_t TextureModeList_exposer = TextureModeList_exposer_t( "TextureModeList" );
        bp::scope TextureModeList_scope( TextureModeList_exposer );
        //WARNING: the next line of code will not compile, because "::std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> > >" does not have operator== !
        TextureModeList_exposer.def( bp::vector_indexing_suite< ::std::vector< std::map< unsigned int, unsigned int > > >() );
    }

}
