// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "gl2extensions.pypp.hpp"

namespace bp = boost::python;

struct GL2Extensions_wrapper : osg::GL2Extensions, bp::wrapper< osg::GL2Extensions > {

    GL2Extensions_wrapper(unsigned int contextID )
    : osg::GL2Extensions( contextID )
      , bp::wrapper< osg::GL2Extensions >(){
        // constructor
    
    }

    GL2Extensions_wrapper(::osg::GL2Extensions const & rhs )
    : osg::GL2Extensions( boost::ref(rhs) )
      , bp::wrapper< osg::GL2Extensions >(){
        // copy constructor
    
    }

    virtual void setThreadSafeRefUnref( bool threadSafe ) {
        if( bp::override func_setThreadSafeRefUnref = this->get_override( "setThreadSafeRefUnref" ) )
            func_setThreadSafeRefUnref( threadSafe );
        else{
            this->osg::Referenced::setThreadSafeRefUnref( threadSafe );
        }
    }
    
    void default_setThreadSafeRefUnref( bool threadSafe ) {
        osg::Referenced::setThreadSafeRefUnref( threadSafe );
    }

};

void register_GL2Extensions_class(){

    { //::osg::GL2Extensions
        typedef bp::class_< GL2Extensions_wrapper, bp::bases< osg::Referenced > > GL2Extensions_exposer_t;
        GL2Extensions_exposer_t GL2Extensions_exposer = GL2Extensions_exposer_t( "GL2Extensions", bp::no_init );
        bp::scope GL2Extensions_scope( GL2Extensions_exposer );
        GL2Extensions_exposer.def( bp::init< unsigned int >(( bp::arg("contextID") )) );
        bp::implicitly_convertible< unsigned int, osg::GL2Extensions >();
        GL2Extensions_exposer.def( bp::init< osg::GL2Extensions const & >(( bp::arg("rhs") )) );
        { //::osg::GL2Extensions::Get
        
            typedef ::osg::GL2Extensions * ( *Get_function_type )( unsigned int,bool );
            
            GL2Extensions_exposer.def( 
                "Get"
                , Get_function_type( &::osg::GL2Extensions::Get )
                , ( bp::arg("contextID"), bp::arg("createIfNotInitalized") )
                    /* undefined call policies */ );
        
        }
        { //::osg::GL2Extensions::Set
        
            typedef void ( *Set_function_type )( unsigned int,::osg::GL2Extensions * );
            
            GL2Extensions_exposer.def( 
                "Set"
                , Set_function_type( &::osg::GL2Extensions::Set )
                , ( bp::arg("contextID"), bp::arg("extensions") ) );
        
        }
        { //::osg::GL2Extensions::areTessellationShadersSupported
        
            typedef bool ( ::osg::GL2Extensions::*areTessellationShadersSupported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "areTessellationShadersSupported"
                , areTessellationShadersSupported_function_type( &::osg::GL2Extensions::areTessellationShadersSupported ) );
        
        }
        { //::osg::GL2Extensions::getAttribLocation
        
            typedef bool ( ::osg::GL2Extensions::*getAttribLocation_function_type)( char const *,::GLuint & ) const;
            
            GL2Extensions_exposer.def( 
                "getAttribLocation"
                , getAttribLocation_function_type( &::osg::GL2Extensions::getAttribLocation )
                , ( bp::arg("attribName"), bp::arg("slot") ) );
        
        }
        { //::osg::GL2Extensions::getCurrentProgram
        
            typedef ::GLuint ( ::osg::GL2Extensions::*getCurrentProgram_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "getCurrentProgram"
                , getCurrentProgram_function_type( &::osg::GL2Extensions::getCurrentProgram ) );
        
        }
        { //::osg::GL2Extensions::getFragDataLocation
        
            typedef bool ( ::osg::GL2Extensions::*getFragDataLocation_function_type)( char const *,::GLuint & ) const;
            
            GL2Extensions_exposer.def( 
                "getFragDataLocation"
                , getFragDataLocation_function_type( &::osg::GL2Extensions::getFragDataLocation )
                , ( bp::arg("fragDataName"), bp::arg("slot") ) );
        
        }
        { //::osg::GL2Extensions::getGlVersion
        
            typedef float ( ::osg::GL2Extensions::*getGlVersion_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "getGlVersion"
                , getGlVersion_function_type( &::osg::GL2Extensions::getGlVersion ) );
        
        }
        { //::osg::GL2Extensions::getLanguageVersion
        
            typedef float ( ::osg::GL2Extensions::*getLanguageVersion_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "getLanguageVersion"
                , getLanguageVersion_function_type( &::osg::GL2Extensions::getLanguageVersion ) );
        
        }
        { //::osg::GL2Extensions::getProgramInfoLog
        
            typedef bool ( ::osg::GL2Extensions::*getProgramInfoLog_function_type)( ::GLuint,::std::string & ) const;
            
            GL2Extensions_exposer.def( 
                "getProgramInfoLog"
                , getProgramInfoLog_function_type( &::osg::GL2Extensions::getProgramInfoLog )
                , ( bp::arg("program"), bp::arg("result") ) );
        
        }
        { //::osg::GL2Extensions::getShaderInfoLog
        
            typedef bool ( ::osg::GL2Extensions::*getShaderInfoLog_function_type)( ::GLuint,::std::string & ) const;
            
            GL2Extensions_exposer.def( 
                "getShaderInfoLog"
                , getShaderInfoLog_function_type( &::osg::GL2Extensions::getShaderInfoLog )
                , ( bp::arg("shader"), bp::arg("result") ) );
        
        }
        { //::osg::GL2Extensions::glAttachShader
        
            typedef void ( ::osg::GL2Extensions::*glAttachShader_function_type)( ::GLuint,::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glAttachShader"
                , glAttachShader_function_type( &::osg::GL2Extensions::glAttachShader )
                , ( bp::arg("program"), bp::arg("shader") ) );
        
        }
        { //::osg::GL2Extensions::glBindAttribLocation
        
            typedef void ( ::osg::GL2Extensions::*glBindAttribLocation_function_type)( ::GLuint,::GLuint,::GLchar const * ) const;
            
            GL2Extensions_exposer.def( 
                "glBindAttribLocation"
                , glBindAttribLocation_function_type( &::osg::GL2Extensions::glBindAttribLocation )
                , ( bp::arg("program"), bp::arg("index"), bp::arg("name") ) );
        
        }
        { //::osg::GL2Extensions::glBindFragDataLocation
        
            typedef void ( ::osg::GL2Extensions::*glBindFragDataLocation_function_type)( ::GLuint,::GLuint,::GLchar const * ) const;
            
            GL2Extensions_exposer.def( 
                "glBindFragDataLocation"
                , glBindFragDataLocation_function_type( &::osg::GL2Extensions::glBindFragDataLocation )
                , ( bp::arg("program"), bp::arg("color"), bp::arg("name") ) );
        
        }
        { //::osg::GL2Extensions::glBlendEquationSeparate
        
            typedef void ( ::osg::GL2Extensions::*glBlendEquationSeparate_function_type)( ::GLenum,::GLenum ) const;
            
            GL2Extensions_exposer.def( 
                "glBlendEquationSeparate"
                , glBlendEquationSeparate_function_type( &::osg::GL2Extensions::glBlendEquationSeparate )
                , ( bp::arg("modeRGB"), bp::arg("modeAlpha") ) );
        
        }
        { //::osg::GL2Extensions::glCompileShader
        
            typedef void ( ::osg::GL2Extensions::*glCompileShader_function_type)( ::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glCompileShader"
                , glCompileShader_function_type( &::osg::GL2Extensions::glCompileShader )
                , ( bp::arg("shader") ) );
        
        }
        { //::osg::GL2Extensions::glCreateProgram
        
            typedef ::GLuint ( ::osg::GL2Extensions::*glCreateProgram_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "glCreateProgram"
                , glCreateProgram_function_type( &::osg::GL2Extensions::glCreateProgram ) );
        
        }
        { //::osg::GL2Extensions::glCreateShader
        
            typedef ::GLuint ( ::osg::GL2Extensions::*glCreateShader_function_type)( ::GLenum ) const;
            
            GL2Extensions_exposer.def( 
                "glCreateShader"
                , glCreateShader_function_type( &::osg::GL2Extensions::glCreateShader )
                , ( bp::arg("type") ) );
        
        }
        { //::osg::GL2Extensions::glDeleteProgram
        
            typedef void ( ::osg::GL2Extensions::*glDeleteProgram_function_type)( ::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glDeleteProgram"
                , glDeleteProgram_function_type( &::osg::GL2Extensions::glDeleteProgram )
                , ( bp::arg("program") ) );
        
        }
        { //::osg::GL2Extensions::glDeleteShader
        
            typedef void ( ::osg::GL2Extensions::*glDeleteShader_function_type)( ::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glDeleteShader"
                , glDeleteShader_function_type( &::osg::GL2Extensions::glDeleteShader )
                , ( bp::arg("shader") ) );
        
        }
        { //::osg::GL2Extensions::glDetachShader
        
            typedef void ( ::osg::GL2Extensions::*glDetachShader_function_type)( ::GLuint,::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glDetachShader"
                , glDetachShader_function_type( &::osg::GL2Extensions::glDetachShader )
                , ( bp::arg("program"), bp::arg("shader") ) );
        
        }
        { //::osg::GL2Extensions::glDisableVertexAttribArray
        
            typedef void ( ::osg::GL2Extensions::*glDisableVertexAttribArray_function_type)( ::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glDisableVertexAttribArray"
                , glDisableVertexAttribArray_function_type( &::osg::GL2Extensions::glDisableVertexAttribArray )
                , ( bp::arg("index") ) );
        
        }
        { //::osg::GL2Extensions::glDispatchCompute
        
            typedef void ( ::osg::GL2Extensions::*glDispatchCompute_function_type)( ::GLuint,::GLuint,::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glDispatchCompute"
                , glDispatchCompute_function_type( &::osg::GL2Extensions::glDispatchCompute )
                , ( bp::arg("numGroupsX"), bp::arg("numGroupsY"), bp::arg("numGroupsZ") ) );
        
        }
        { //::osg::GL2Extensions::glDrawBuffers
        
            typedef void ( ::osg::GL2Extensions::*glDrawBuffers_function_type)( ::GLsizei,::GLenum const * ) const;
            
            GL2Extensions_exposer.def( 
                "glDrawBuffers"
                , glDrawBuffers_function_type( &::osg::GL2Extensions::glDrawBuffers )
                , ( bp::arg("n"), bp::arg("bufs") ) );
        
        }
        { //::osg::GL2Extensions::glEnableVertexAttribArray
        
            typedef void ( ::osg::GL2Extensions::*glEnableVertexAttribArray_function_type)( ::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glEnableVertexAttribArray"
                , glEnableVertexAttribArray_function_type( &::osg::GL2Extensions::glEnableVertexAttribArray )
                , ( bp::arg("index") ) );
        
        }
        { //::osg::GL2Extensions::glFramebufferTexture
        
            typedef void ( ::osg::GL2Extensions::*glFramebufferTexture_function_type)( ::GLenum,::GLenum,::GLuint,::GLint ) const;
            
            GL2Extensions_exposer.def( 
                "glFramebufferTexture"
                , glFramebufferTexture_function_type( &::osg::GL2Extensions::glFramebufferTexture )
                , ( bp::arg("target"), bp::arg("attachment"), bp::arg("texture"), bp::arg("level") ) );
        
        }
        { //::osg::GL2Extensions::glFramebufferTextureFace
        
            typedef void ( ::osg::GL2Extensions::*glFramebufferTextureFace_function_type)( ::GLenum,::GLenum,::GLuint,::GLint,::GLenum ) const;
            
            GL2Extensions_exposer.def( 
                "glFramebufferTextureFace"
                , glFramebufferTextureFace_function_type( &::osg::GL2Extensions::glFramebufferTextureFace )
                , ( bp::arg("target"), bp::arg("attachment"), bp::arg("texture"), bp::arg("level"), bp::arg("face") ) );
        
        }
        { //::osg::GL2Extensions::glFramebufferTextureLayer
        
            typedef void ( ::osg::GL2Extensions::*glFramebufferTextureLayer_function_type)( ::GLenum,::GLenum,::GLuint,::GLint,::GLint ) const;
            
            GL2Extensions_exposer.def( 
                "glFramebufferTextureLayer"
                , glFramebufferTextureLayer_function_type( &::osg::GL2Extensions::glFramebufferTextureLayer )
                , ( bp::arg("target"), bp::arg("attachment"), bp::arg("texture"), bp::arg("level"), bp::arg("layer") ) );
        
        }
        { //::osg::GL2Extensions::glGetActiveAtomicCounterBufferiv
        
            typedef void ( ::osg::GL2Extensions::*glGetActiveAtomicCounterBufferiv_function_type)( ::GLuint,::GLuint,::GLenum,::GLint * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetActiveAtomicCounterBufferiv"
                , glGetActiveAtomicCounterBufferiv_function_type( &::osg::GL2Extensions::glGetActiveAtomicCounterBufferiv )
                , ( bp::arg("program"), bp::arg("bufferIndex"), bp::arg("pname"), bp::arg("params") ) );
        
        }
        { //::osg::GL2Extensions::glGetActiveAttrib
        
            typedef void ( ::osg::GL2Extensions::*glGetActiveAttrib_function_type)( ::GLuint,::GLuint,::GLsizei,::GLsizei *,::GLint *,::GLenum *,::GLchar * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetActiveAttrib"
                , glGetActiveAttrib_function_type( &::osg::GL2Extensions::glGetActiveAttrib )
                , ( bp::arg("program"), bp::arg("index"), bp::arg("bufSize"), bp::arg("length"), bp::arg("size"), bp::arg("type"), bp::arg("name") ) );
        
        }
        { //::osg::GL2Extensions::glGetActiveUniform
        
            typedef void ( ::osg::GL2Extensions::*glGetActiveUniform_function_type)( ::GLuint,::GLuint,::GLsizei,::GLsizei *,::GLint *,::GLenum *,::GLchar * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetActiveUniform"
                , glGetActiveUniform_function_type( &::osg::GL2Extensions::glGetActiveUniform )
                , ( bp::arg("program"), bp::arg("index"), bp::arg("bufSize"), bp::arg("length"), bp::arg("size"), bp::arg("type"), bp::arg("name") ) );
        
        }
        { //::osg::GL2Extensions::glGetActiveUniformBlockName
        
            typedef void ( ::osg::GL2Extensions::*glGetActiveUniformBlockName_function_type)( ::GLuint,::GLuint,::GLsizei,::GLsizei *,::GLchar * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetActiveUniformBlockName"
                , glGetActiveUniformBlockName_function_type( &::osg::GL2Extensions::glGetActiveUniformBlockName )
                , ( bp::arg("program"), bp::arg("uniformBlockIndex"), bp::arg("bufSize"), bp::arg("length"), bp::arg("uniformBlockName") ) );
        
        }
        { //::osg::GL2Extensions::glGetActiveUniformBlockiv
        
            typedef void ( ::osg::GL2Extensions::*glGetActiveUniformBlockiv_function_type)( ::GLuint,::GLuint,::GLenum,::GLint * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetActiveUniformBlockiv"
                , glGetActiveUniformBlockiv_function_type( &::osg::GL2Extensions::glGetActiveUniformBlockiv )
                , ( bp::arg("program"), bp::arg("uniformBlockIndex"), bp::arg("pname"), bp::arg("params") ) );
        
        }
        { //::osg::GL2Extensions::glGetActiveUniformName
        
            typedef void ( ::osg::GL2Extensions::*glGetActiveUniformName_function_type)( ::GLuint,::GLuint,::GLsizei,::GLsizei *,::GLchar * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetActiveUniformName"
                , glGetActiveUniformName_function_type( &::osg::GL2Extensions::glGetActiveUniformName )
                , ( bp::arg("program"), bp::arg("uniformIndex"), bp::arg("bufSize"), bp::arg("length"), bp::arg("uniformName") ) );
        
        }
        { //::osg::GL2Extensions::glGetActiveUniformsiv
        
            typedef void ( ::osg::GL2Extensions::*glGetActiveUniformsiv_function_type)( ::GLuint,::GLsizei,::GLuint const *,::GLenum,::GLint * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetActiveUniformsiv"
                , glGetActiveUniformsiv_function_type( &::osg::GL2Extensions::glGetActiveUniformsiv )
                , ( bp::arg("program"), bp::arg("uniformCount"), bp::arg("uniformIndices"), bp::arg("pname"), bp::arg("params") ) );
        
        }
        { //::osg::GL2Extensions::glGetAttachedShaders
        
            typedef void ( ::osg::GL2Extensions::*glGetAttachedShaders_function_type)( ::GLuint,::GLsizei,::GLsizei *,::GLuint * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetAttachedShaders"
                , glGetAttachedShaders_function_type( &::osg::GL2Extensions::glGetAttachedShaders )
                , ( bp::arg("program"), bp::arg("maxCount"), bp::arg("count"), bp::arg("obj") ) );
        
        }
        { //::osg::GL2Extensions::glGetAttribLocation
        
            typedef ::GLint ( ::osg::GL2Extensions::*glGetAttribLocation_function_type)( ::GLuint,::GLchar const * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetAttribLocation"
                , glGetAttribLocation_function_type( &::osg::GL2Extensions::glGetAttribLocation )
                , ( bp::arg("program"), bp::arg("name") ) );
        
        }
        { //::osg::GL2Extensions::glGetFragDataLocation
        
            typedef ::GLint ( ::osg::GL2Extensions::*glGetFragDataLocation_function_type)( ::GLuint,::GLchar const * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetFragDataLocation"
                , glGetFragDataLocation_function_type( &::osg::GL2Extensions::glGetFragDataLocation )
                , ( bp::arg("program"), bp::arg("name") ) );
        
        }
        { //::osg::GL2Extensions::glGetProgramBinary
        
            typedef void ( ::osg::GL2Extensions::*glGetProgramBinary_function_type)( ::GLuint,::GLsizei,::GLsizei *,::GLenum *,::GLvoid * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetProgramBinary"
                , glGetProgramBinary_function_type( &::osg::GL2Extensions::glGetProgramBinary )
                , ( bp::arg("program"), bp::arg("bufSize"), bp::arg("length"), bp::arg("binaryFormat"), bp::arg("binary") ) );
        
        }
        { //::osg::GL2Extensions::glGetProgramInfoLog
        
            typedef void ( ::osg::GL2Extensions::*glGetProgramInfoLog_function_type)( ::GLuint,::GLsizei,::GLsizei *,::GLchar * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetProgramInfoLog"
                , glGetProgramInfoLog_function_type( &::osg::GL2Extensions::glGetProgramInfoLog )
                , ( bp::arg("program"), bp::arg("bufSize"), bp::arg("length"), bp::arg("infoLog") ) );
        
        }
        { //::osg::GL2Extensions::glGetProgramiv
        
            typedef void ( ::osg::GL2Extensions::*glGetProgramiv_function_type)( ::GLuint,::GLenum,::GLint * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetProgramiv"
                , glGetProgramiv_function_type( &::osg::GL2Extensions::glGetProgramiv )
                , ( bp::arg("program"), bp::arg("pname"), bp::arg("params") ) );
        
        }
        { //::osg::GL2Extensions::glGetShaderInfoLog
        
            typedef void ( ::osg::GL2Extensions::*glGetShaderInfoLog_function_type)( ::GLuint,::GLsizei,::GLsizei *,::GLchar * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetShaderInfoLog"
                , glGetShaderInfoLog_function_type( &::osg::GL2Extensions::glGetShaderInfoLog )
                , ( bp::arg("shader"), bp::arg("bufSize"), bp::arg("length"), bp::arg("infoLog") ) );
        
        }
        { //::osg::GL2Extensions::glGetShaderSource
        
            typedef void ( ::osg::GL2Extensions::*glGetShaderSource_function_type)( ::GLuint,::GLsizei,::GLsizei *,::GLchar * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetShaderSource"
                , glGetShaderSource_function_type( &::osg::GL2Extensions::glGetShaderSource )
                , ( bp::arg("shader"), bp::arg("bufSize"), bp::arg("length"), bp::arg("source") ) );
        
        }
        { //::osg::GL2Extensions::glGetShaderiv
        
            typedef void ( ::osg::GL2Extensions::*glGetShaderiv_function_type)( ::GLuint,::GLenum,::GLint * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetShaderiv"
                , glGetShaderiv_function_type( &::osg::GL2Extensions::glGetShaderiv )
                , ( bp::arg("shader"), bp::arg("pname"), bp::arg("params") ) );
        
        }
        { //::osg::GL2Extensions::glGetUniformBlockIndex
        
            typedef ::GLuint ( ::osg::GL2Extensions::*glGetUniformBlockIndex_function_type)( ::GLuint,::GLchar const * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetUniformBlockIndex"
                , glGetUniformBlockIndex_function_type( &::osg::GL2Extensions::glGetUniformBlockIndex )
                , ( bp::arg("program"), bp::arg("uniformBlockName") ) );
        
        }
        { //::osg::GL2Extensions::glGetUniformIndices
        
            typedef void ( ::osg::GL2Extensions::*glGetUniformIndices_function_type)( ::GLuint,::GLsizei,::GLchar const * *,::GLuint * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetUniformIndices"
                , glGetUniformIndices_function_type( &::osg::GL2Extensions::glGetUniformIndices )
                , ( bp::arg("program"), bp::arg("uniformCount"), bp::arg("uniformNames"), bp::arg("uniformIndices") ) );
        
        }
        { //::osg::GL2Extensions::glGetUniformLocation
        
            typedef ::GLint ( ::osg::GL2Extensions::*glGetUniformLocation_function_type)( ::GLuint,::GLchar const * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetUniformLocation"
                , glGetUniformLocation_function_type( &::osg::GL2Extensions::glGetUniformLocation )
                , ( bp::arg("program"), bp::arg("name") ) );
        
        }
        { //::osg::GL2Extensions::glGetUniformfv
        
            typedef void ( ::osg::GL2Extensions::*glGetUniformfv_function_type)( ::GLuint,::GLint,::GLfloat * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetUniformfv"
                , glGetUniformfv_function_type( &::osg::GL2Extensions::glGetUniformfv )
                , ( bp::arg("program"), bp::arg("location"), bp::arg("params") ) );
        
        }
        { //::osg::GL2Extensions::glGetUniformiv
        
            typedef void ( ::osg::GL2Extensions::*glGetUniformiv_function_type)( ::GLuint,::GLint,::GLint * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetUniformiv"
                , glGetUniformiv_function_type( &::osg::GL2Extensions::glGetUniformiv )
                , ( bp::arg("program"), bp::arg("location"), bp::arg("params") ) );
        
        }
        { //::osg::GL2Extensions::glGetUniformuiv
        
            typedef void ( ::osg::GL2Extensions::*glGetUniformuiv_function_type)( ::GLuint,::GLint,::GLuint * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetUniformuiv"
                , glGetUniformuiv_function_type( &::osg::GL2Extensions::glGetUniformuiv )
                , ( bp::arg("program"), bp::arg("location"), bp::arg("params") ) );
        
        }
        { //::osg::GL2Extensions::glGetVertexAttribPointerv
        
            typedef void ( ::osg::GL2Extensions::*glGetVertexAttribPointerv_function_type)( ::GLuint,::GLenum,::GLvoid * * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetVertexAttribPointerv"
                , glGetVertexAttribPointerv_function_type( &::osg::GL2Extensions::glGetVertexAttribPointerv )
                , ( bp::arg("index"), bp::arg("pname"), bp::arg("pointer") ) );
        
        }
        { //::osg::GL2Extensions::glGetVertexAttribdv
        
            typedef void ( ::osg::GL2Extensions::*glGetVertexAttribdv_function_type)( ::GLuint,::GLenum,double * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetVertexAttribdv"
                , glGetVertexAttribdv_function_type( &::osg::GL2Extensions::glGetVertexAttribdv )
                , ( bp::arg("index"), bp::arg("pname"), bp::arg("params") ) );
        
        }
        { //::osg::GL2Extensions::glGetVertexAttribfv
        
            typedef void ( ::osg::GL2Extensions::*glGetVertexAttribfv_function_type)( ::GLuint,::GLenum,::GLfloat * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetVertexAttribfv"
                , glGetVertexAttribfv_function_type( &::osg::GL2Extensions::glGetVertexAttribfv )
                , ( bp::arg("index"), bp::arg("pname"), bp::arg("params") ) );
        
        }
        { //::osg::GL2Extensions::glGetVertexAttribiv
        
            typedef void ( ::osg::GL2Extensions::*glGetVertexAttribiv_function_type)( ::GLuint,::GLenum,::GLint * ) const;
            
            GL2Extensions_exposer.def( 
                "glGetVertexAttribiv"
                , glGetVertexAttribiv_function_type( &::osg::GL2Extensions::glGetVertexAttribiv )
                , ( bp::arg("index"), bp::arg("pname"), bp::arg("params") ) );
        
        }
        { //::osg::GL2Extensions::glIsProgram
        
            typedef ::GLboolean ( ::osg::GL2Extensions::*glIsProgram_function_type)( ::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glIsProgram"
                , glIsProgram_function_type( &::osg::GL2Extensions::glIsProgram )
                , ( bp::arg("program") ) );
        
        }
        { //::osg::GL2Extensions::glIsShader
        
            typedef ::GLboolean ( ::osg::GL2Extensions::*glIsShader_function_type)( ::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glIsShader"
                , glIsShader_function_type( &::osg::GL2Extensions::glIsShader )
                , ( bp::arg("shader") ) );
        
        }
        { //::osg::GL2Extensions::glLinkProgram
        
            typedef void ( ::osg::GL2Extensions::*glLinkProgram_function_type)( ::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glLinkProgram"
                , glLinkProgram_function_type( &::osg::GL2Extensions::glLinkProgram )
                , ( bp::arg("program") ) );
        
        }
        { //::osg::GL2Extensions::glPatchParameterfv
        
            typedef void ( ::osg::GL2Extensions::*glPatchParameterfv_function_type)( ::GLenum,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glPatchParameterfv"
                , glPatchParameterfv_function_type( &::osg::GL2Extensions::glPatchParameterfv )
                , ( bp::arg("pname"), bp::arg("values") ) );
        
        }
        { //::osg::GL2Extensions::glPatchParameteri
        
            typedef void ( ::osg::GL2Extensions::*glPatchParameteri_function_type)( ::GLenum,::GLint ) const;
            
            GL2Extensions_exposer.def( 
                "glPatchParameteri"
                , glPatchParameteri_function_type( &::osg::GL2Extensions::glPatchParameteri )
                , ( bp::arg("pname"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glProgramBinary
        
            typedef void ( ::osg::GL2Extensions::*glProgramBinary_function_type)( ::GLuint,::GLenum,::GLvoid const *,::GLsizei ) const;
            
            GL2Extensions_exposer.def( 
                "glProgramBinary"
                , glProgramBinary_function_type( &::osg::GL2Extensions::glProgramBinary )
                , ( bp::arg("program"), bp::arg("binaryFormat"), bp::arg("binary"), bp::arg("length") ) );
        
        }
        { //::osg::GL2Extensions::glProgramParameteri
        
            typedef void ( ::osg::GL2Extensions::*glProgramParameteri_function_type)( ::GLuint,::GLenum,::GLint ) const;
            
            GL2Extensions_exposer.def( 
                "glProgramParameteri"
                , glProgramParameteri_function_type( &::osg::GL2Extensions::glProgramParameteri )
                , ( bp::arg("program"), bp::arg("pname"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glShaderSource
        
            typedef void ( ::osg::GL2Extensions::*glShaderSource_function_type)( ::GLuint,::GLsizei,::GLchar const * *,::GLint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glShaderSource"
                , glShaderSource_function_type( &::osg::GL2Extensions::glShaderSource )
                , ( bp::arg("shader"), bp::arg("count"), bp::arg("string"), bp::arg("length") ) );
        
        }
        { //::osg::GL2Extensions::glStencilFuncSeparate
        
            typedef void ( ::osg::GL2Extensions::*glStencilFuncSeparate_function_type)( ::GLenum,::GLenum,::GLint,::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glStencilFuncSeparate"
                , glStencilFuncSeparate_function_type( &::osg::GL2Extensions::glStencilFuncSeparate )
                , ( bp::arg("frontfunc"), bp::arg("backfunc"), bp::arg("ref"), bp::arg("mask") ) );
        
        }
        { //::osg::GL2Extensions::glStencilMaskSeparate
        
            typedef void ( ::osg::GL2Extensions::*glStencilMaskSeparate_function_type)( ::GLenum,::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glStencilMaskSeparate"
                , glStencilMaskSeparate_function_type( &::osg::GL2Extensions::glStencilMaskSeparate )
                , ( bp::arg("face"), bp::arg("mask") ) );
        
        }
        { //::osg::GL2Extensions::glStencilOpSeparate
        
            typedef void ( ::osg::GL2Extensions::*glStencilOpSeparate_function_type)( ::GLenum,::GLenum,::GLenum,::GLenum ) const;
            
            GL2Extensions_exposer.def( 
                "glStencilOpSeparate"
                , glStencilOpSeparate_function_type( &::osg::GL2Extensions::glStencilOpSeparate )
                , ( bp::arg("face"), bp::arg("sfail"), bp::arg("dpfail"), bp::arg("dppass") ) );
        
        }
        { //::osg::GL2Extensions::glUniform1d
        
            typedef void ( ::osg::GL2Extensions::*glUniform1d_function_type)( ::GLint,double ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform1d"
                , glUniform1d_function_type( &::osg::GL2Extensions::glUniform1d )
                , ( bp::arg("location"), bp::arg("v0") ) );
        
        }
        { //::osg::GL2Extensions::glUniform1dv
        
            typedef void ( ::osg::GL2Extensions::*glUniform1dv_function_type)( ::GLint,::GLsizei,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform1dv"
                , glUniform1dv_function_type( &::osg::GL2Extensions::glUniform1dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform1f
        
            typedef void ( ::osg::GL2Extensions::*glUniform1f_function_type)( ::GLint,::GLfloat ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform1f"
                , glUniform1f_function_type( &::osg::GL2Extensions::glUniform1f )
                , ( bp::arg("location"), bp::arg("v0") ) );
        
        }
        { //::osg::GL2Extensions::glUniform1fv
        
            typedef void ( ::osg::GL2Extensions::*glUniform1fv_function_type)( ::GLint,::GLsizei,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform1fv"
                , glUniform1fv_function_type( &::osg::GL2Extensions::glUniform1fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform1i
        
            typedef void ( ::osg::GL2Extensions::*glUniform1i_function_type)( ::GLint,::GLint ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform1i"
                , glUniform1i_function_type( &::osg::GL2Extensions::glUniform1i )
                , ( bp::arg("location"), bp::arg("v0") ) );
        
        }
        { //::osg::GL2Extensions::glUniform1iv
        
            typedef void ( ::osg::GL2Extensions::*glUniform1iv_function_type)( ::GLint,::GLsizei,::GLint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform1iv"
                , glUniform1iv_function_type( &::osg::GL2Extensions::glUniform1iv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform1ui
        
            typedef void ( ::osg::GL2Extensions::*glUniform1ui_function_type)( ::GLint,::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform1ui"
                , glUniform1ui_function_type( &::osg::GL2Extensions::glUniform1ui )
                , ( bp::arg("location"), bp::arg("v0") ) );
        
        }
        { //::osg::GL2Extensions::glUniform1uiv
        
            typedef void ( ::osg::GL2Extensions::*glUniform1uiv_function_type)( ::GLint,::GLsizei,::GLuint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform1uiv"
                , glUniform1uiv_function_type( &::osg::GL2Extensions::glUniform1uiv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform2d
        
            typedef void ( ::osg::GL2Extensions::*glUniform2d_function_type)( ::GLint,double,double ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform2d"
                , glUniform2d_function_type( &::osg::GL2Extensions::glUniform2d )
                , ( bp::arg("location"), bp::arg("v0"), bp::arg("v1") ) );
        
        }
        { //::osg::GL2Extensions::glUniform2dv
        
            typedef void ( ::osg::GL2Extensions::*glUniform2dv_function_type)( ::GLint,::GLsizei,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform2dv"
                , glUniform2dv_function_type( &::osg::GL2Extensions::glUniform2dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform2f
        
            typedef void ( ::osg::GL2Extensions::*glUniform2f_function_type)( ::GLint,::GLfloat,::GLfloat ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform2f"
                , glUniform2f_function_type( &::osg::GL2Extensions::glUniform2f )
                , ( bp::arg("location"), bp::arg("v0"), bp::arg("v1") ) );
        
        }
        { //::osg::GL2Extensions::glUniform2fv
        
            typedef void ( ::osg::GL2Extensions::*glUniform2fv_function_type)( ::GLint,::GLsizei,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform2fv"
                , glUniform2fv_function_type( &::osg::GL2Extensions::glUniform2fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform2i
        
            typedef void ( ::osg::GL2Extensions::*glUniform2i_function_type)( ::GLint,::GLint,::GLint ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform2i"
                , glUniform2i_function_type( &::osg::GL2Extensions::glUniform2i )
                , ( bp::arg("location"), bp::arg("v0"), bp::arg("v1") ) );
        
        }
        { //::osg::GL2Extensions::glUniform2iv
        
            typedef void ( ::osg::GL2Extensions::*glUniform2iv_function_type)( ::GLint,::GLsizei,::GLint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform2iv"
                , glUniform2iv_function_type( &::osg::GL2Extensions::glUniform2iv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform2ui
        
            typedef void ( ::osg::GL2Extensions::*glUniform2ui_function_type)( ::GLint,::GLuint,::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform2ui"
                , glUniform2ui_function_type( &::osg::GL2Extensions::glUniform2ui )
                , ( bp::arg("location"), bp::arg("v0"), bp::arg("v1") ) );
        
        }
        { //::osg::GL2Extensions::glUniform2uiv
        
            typedef void ( ::osg::GL2Extensions::*glUniform2uiv_function_type)( ::GLint,::GLsizei,::GLuint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform2uiv"
                , glUniform2uiv_function_type( &::osg::GL2Extensions::glUniform2uiv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform3d
        
            typedef void ( ::osg::GL2Extensions::*glUniform3d_function_type)( ::GLint,double,double,double ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform3d"
                , glUniform3d_function_type( &::osg::GL2Extensions::glUniform3d )
                , ( bp::arg("location"), bp::arg("v0"), bp::arg("v1"), bp::arg("v2") ) );
        
        }
        { //::osg::GL2Extensions::glUniform3dv
        
            typedef void ( ::osg::GL2Extensions::*glUniform3dv_function_type)( ::GLint,::GLsizei,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform3dv"
                , glUniform3dv_function_type( &::osg::GL2Extensions::glUniform3dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform3f
        
            typedef void ( ::osg::GL2Extensions::*glUniform3f_function_type)( ::GLint,::GLfloat,::GLfloat,::GLfloat ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform3f"
                , glUniform3f_function_type( &::osg::GL2Extensions::glUniform3f )
                , ( bp::arg("location"), bp::arg("v0"), bp::arg("v1"), bp::arg("v2") ) );
        
        }
        { //::osg::GL2Extensions::glUniform3fv
        
            typedef void ( ::osg::GL2Extensions::*glUniform3fv_function_type)( ::GLint,::GLsizei,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform3fv"
                , glUniform3fv_function_type( &::osg::GL2Extensions::glUniform3fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform3i
        
            typedef void ( ::osg::GL2Extensions::*glUniform3i_function_type)( ::GLint,::GLint,::GLint,::GLint ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform3i"
                , glUniform3i_function_type( &::osg::GL2Extensions::glUniform3i )
                , ( bp::arg("location"), bp::arg("v0"), bp::arg("v1"), bp::arg("v2") ) );
        
        }
        { //::osg::GL2Extensions::glUniform3iv
        
            typedef void ( ::osg::GL2Extensions::*glUniform3iv_function_type)( ::GLint,::GLsizei,::GLint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform3iv"
                , glUniform3iv_function_type( &::osg::GL2Extensions::glUniform3iv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform3ui
        
            typedef void ( ::osg::GL2Extensions::*glUniform3ui_function_type)( ::GLint,::GLuint,::GLuint,::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform3ui"
                , glUniform3ui_function_type( &::osg::GL2Extensions::glUniform3ui )
                , ( bp::arg("location"), bp::arg("v0"), bp::arg("v1"), bp::arg("v2") ) );
        
        }
        { //::osg::GL2Extensions::glUniform3uiv
        
            typedef void ( ::osg::GL2Extensions::*glUniform3uiv_function_type)( ::GLint,::GLsizei,::GLuint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform3uiv"
                , glUniform3uiv_function_type( &::osg::GL2Extensions::glUniform3uiv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform4d
        
            typedef void ( ::osg::GL2Extensions::*glUniform4d_function_type)( ::GLint,double,double,double,double ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform4d"
                , glUniform4d_function_type( &::osg::GL2Extensions::glUniform4d )
                , ( bp::arg("location"), bp::arg("v0"), bp::arg("v1"), bp::arg("v2"), bp::arg("v3") ) );
        
        }
        { //::osg::GL2Extensions::glUniform4dv
        
            typedef void ( ::osg::GL2Extensions::*glUniform4dv_function_type)( ::GLint,::GLsizei,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform4dv"
                , glUniform4dv_function_type( &::osg::GL2Extensions::glUniform4dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform4f
        
            typedef void ( ::osg::GL2Extensions::*glUniform4f_function_type)( ::GLint,::GLfloat,::GLfloat,::GLfloat,::GLfloat ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform4f"
                , glUniform4f_function_type( &::osg::GL2Extensions::glUniform4f )
                , ( bp::arg("location"), bp::arg("v0"), bp::arg("v1"), bp::arg("v2"), bp::arg("v3") ) );
        
        }
        { //::osg::GL2Extensions::glUniform4fv
        
            typedef void ( ::osg::GL2Extensions::*glUniform4fv_function_type)( ::GLint,::GLsizei,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform4fv"
                , glUniform4fv_function_type( &::osg::GL2Extensions::glUniform4fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform4i
        
            typedef void ( ::osg::GL2Extensions::*glUniform4i_function_type)( ::GLint,::GLint,::GLint,::GLint,::GLint ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform4i"
                , glUniform4i_function_type( &::osg::GL2Extensions::glUniform4i )
                , ( bp::arg("location"), bp::arg("v0"), bp::arg("v1"), bp::arg("v2"), bp::arg("v3") ) );
        
        }
        { //::osg::GL2Extensions::glUniform4iv
        
            typedef void ( ::osg::GL2Extensions::*glUniform4iv_function_type)( ::GLint,::GLsizei,::GLint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform4iv"
                , glUniform4iv_function_type( &::osg::GL2Extensions::glUniform4iv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniform4ui
        
            typedef void ( ::osg::GL2Extensions::*glUniform4ui_function_type)( ::GLint,::GLuint,::GLuint,::GLuint,::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform4ui"
                , glUniform4ui_function_type( &::osg::GL2Extensions::glUniform4ui )
                , ( bp::arg("location"), bp::arg("v0"), bp::arg("v1"), bp::arg("v2"), bp::arg("v3") ) );
        
        }
        { //::osg::GL2Extensions::glUniform4uiv
        
            typedef void ( ::osg::GL2Extensions::*glUniform4uiv_function_type)( ::GLint,::GLsizei,::GLuint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniform4uiv"
                , glUniform4uiv_function_type( &::osg::GL2Extensions::glUniform4uiv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformBlockBinding
        
            typedef void ( ::osg::GL2Extensions::*glUniformBlockBinding_function_type)( ::GLuint,::GLuint,::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformBlockBinding"
                , glUniformBlockBinding_function_type( &::osg::GL2Extensions::glUniformBlockBinding )
                , ( bp::arg("program"), bp::arg("uniformBlockIndex"), bp::arg("uniformBlockBinding") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix2dv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix2dv_function_type)( ::GLint,::GLsizei,::GLboolean,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix2dv"
                , glUniformMatrix2dv_function_type( &::osg::GL2Extensions::glUniformMatrix2dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix2fv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix2fv_function_type)( ::GLint,::GLsizei,::GLboolean,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix2fv"
                , glUniformMatrix2fv_function_type( &::osg::GL2Extensions::glUniformMatrix2fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix2x3dv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix2x3dv_function_type)( ::GLint,::GLsizei,::GLboolean,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix2x3dv"
                , glUniformMatrix2x3dv_function_type( &::osg::GL2Extensions::glUniformMatrix2x3dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix2x3fv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix2x3fv_function_type)( ::GLint,::GLsizei,::GLboolean,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix2x3fv"
                , glUniformMatrix2x3fv_function_type( &::osg::GL2Extensions::glUniformMatrix2x3fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix2x4dv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix2x4dv_function_type)( ::GLint,::GLsizei,::GLboolean,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix2x4dv"
                , glUniformMatrix2x4dv_function_type( &::osg::GL2Extensions::glUniformMatrix2x4dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix2x4fv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix2x4fv_function_type)( ::GLint,::GLsizei,::GLboolean,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix2x4fv"
                , glUniformMatrix2x4fv_function_type( &::osg::GL2Extensions::glUniformMatrix2x4fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix3dv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix3dv_function_type)( ::GLint,::GLsizei,::GLboolean,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix3dv"
                , glUniformMatrix3dv_function_type( &::osg::GL2Extensions::glUniformMatrix3dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix3fv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix3fv_function_type)( ::GLint,::GLsizei,::GLboolean,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix3fv"
                , glUniformMatrix3fv_function_type( &::osg::GL2Extensions::glUniformMatrix3fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix3x2dv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix3x2dv_function_type)( ::GLint,::GLsizei,::GLboolean,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix3x2dv"
                , glUniformMatrix3x2dv_function_type( &::osg::GL2Extensions::glUniformMatrix3x2dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix3x2fv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix3x2fv_function_type)( ::GLint,::GLsizei,::GLboolean,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix3x2fv"
                , glUniformMatrix3x2fv_function_type( &::osg::GL2Extensions::glUniformMatrix3x2fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix3x4dv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix3x4dv_function_type)( ::GLint,::GLsizei,::GLboolean,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix3x4dv"
                , glUniformMatrix3x4dv_function_type( &::osg::GL2Extensions::glUniformMatrix3x4dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix3x4fv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix3x4fv_function_type)( ::GLint,::GLsizei,::GLboolean,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix3x4fv"
                , glUniformMatrix3x4fv_function_type( &::osg::GL2Extensions::glUniformMatrix3x4fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix4dv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix4dv_function_type)( ::GLint,::GLsizei,::GLboolean,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix4dv"
                , glUniformMatrix4dv_function_type( &::osg::GL2Extensions::glUniformMatrix4dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix4fv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix4fv_function_type)( ::GLint,::GLsizei,::GLboolean,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix4fv"
                , glUniformMatrix4fv_function_type( &::osg::GL2Extensions::glUniformMatrix4fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix4x2dv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix4x2dv_function_type)( ::GLint,::GLsizei,::GLboolean,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix4x2dv"
                , glUniformMatrix4x2dv_function_type( &::osg::GL2Extensions::glUniformMatrix4x2dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix4x2fv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix4x2fv_function_type)( ::GLint,::GLsizei,::GLboolean,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix4x2fv"
                , glUniformMatrix4x2fv_function_type( &::osg::GL2Extensions::glUniformMatrix4x2fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix4x3dv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix4x3dv_function_type)( ::GLint,::GLsizei,::GLboolean,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix4x3dv"
                , glUniformMatrix4x3dv_function_type( &::osg::GL2Extensions::glUniformMatrix4x3dv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUniformMatrix4x3fv
        
            typedef void ( ::osg::GL2Extensions::*glUniformMatrix4x3fv_function_type)( ::GLint,::GLsizei,::GLboolean,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glUniformMatrix4x3fv"
                , glUniformMatrix4x3fv_function_type( &::osg::GL2Extensions::glUniformMatrix4x3fv )
                , ( bp::arg("location"), bp::arg("count"), bp::arg("transpose"), bp::arg("value") ) );
        
        }
        { //::osg::GL2Extensions::glUseProgram
        
            typedef void ( ::osg::GL2Extensions::*glUseProgram_function_type)( ::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glUseProgram"
                , glUseProgram_function_type( &::osg::GL2Extensions::glUseProgram )
                , ( bp::arg("program") ) );
        
        }
        { //::osg::GL2Extensions::glValidateProgram
        
            typedef void ( ::osg::GL2Extensions::*glValidateProgram_function_type)( ::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glValidateProgram"
                , glValidateProgram_function_type( &::osg::GL2Extensions::glValidateProgram )
                , ( bp::arg("program") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib1d
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib1d_function_type)( ::GLuint,double ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib1d"
                , glVertexAttrib1d_function_type( &::osg::GL2Extensions::glVertexAttrib1d )
                , ( bp::arg("index"), bp::arg("x") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib1dv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib1dv_function_type)( ::GLuint,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib1dv"
                , glVertexAttrib1dv_function_type( &::osg::GL2Extensions::glVertexAttrib1dv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib1f
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib1f_function_type)( ::GLuint,::GLfloat ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib1f"
                , glVertexAttrib1f_function_type( &::osg::GL2Extensions::glVertexAttrib1f )
                , ( bp::arg("index"), bp::arg("x") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib1fv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib1fv_function_type)( ::GLuint,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib1fv"
                , glVertexAttrib1fv_function_type( &::osg::GL2Extensions::glVertexAttrib1fv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib1s
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib1s_function_type)( ::GLuint,::GLshort ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib1s"
                , glVertexAttrib1s_function_type( &::osg::GL2Extensions::glVertexAttrib1s )
                , ( bp::arg("index"), bp::arg("x") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib1sv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib1sv_function_type)( ::GLuint,::GLshort const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib1sv"
                , glVertexAttrib1sv_function_type( &::osg::GL2Extensions::glVertexAttrib1sv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib2d
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib2d_function_type)( ::GLuint,double,double ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib2d"
                , glVertexAttrib2d_function_type( &::osg::GL2Extensions::glVertexAttrib2d )
                , ( bp::arg("index"), bp::arg("x"), bp::arg("y") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib2dv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib2dv_function_type)( ::GLuint,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib2dv"
                , glVertexAttrib2dv_function_type( &::osg::GL2Extensions::glVertexAttrib2dv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib2f
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib2f_function_type)( ::GLuint,::GLfloat,::GLfloat ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib2f"
                , glVertexAttrib2f_function_type( &::osg::GL2Extensions::glVertexAttrib2f )
                , ( bp::arg("index"), bp::arg("x"), bp::arg("y") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib2fv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib2fv_function_type)( ::GLuint,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib2fv"
                , glVertexAttrib2fv_function_type( &::osg::GL2Extensions::glVertexAttrib2fv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib2s
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib2s_function_type)( ::GLuint,::GLshort,::GLshort ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib2s"
                , glVertexAttrib2s_function_type( &::osg::GL2Extensions::glVertexAttrib2s )
                , ( bp::arg("index"), bp::arg("x"), bp::arg("y") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib2sv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib2sv_function_type)( ::GLuint,::GLshort const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib2sv"
                , glVertexAttrib2sv_function_type( &::osg::GL2Extensions::glVertexAttrib2sv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib3d
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib3d_function_type)( ::GLuint,double,double,double ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib3d"
                , glVertexAttrib3d_function_type( &::osg::GL2Extensions::glVertexAttrib3d )
                , ( bp::arg("index"), bp::arg("x"), bp::arg("y"), bp::arg("z") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib3dv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib3dv_function_type)( ::GLuint,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib3dv"
                , glVertexAttrib3dv_function_type( &::osg::GL2Extensions::glVertexAttrib3dv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib3f
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib3f_function_type)( ::GLuint,::GLfloat,::GLfloat,::GLfloat ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib3f"
                , glVertexAttrib3f_function_type( &::osg::GL2Extensions::glVertexAttrib3f )
                , ( bp::arg("index"), bp::arg("x"), bp::arg("y"), bp::arg("z") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib3fv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib3fv_function_type)( ::GLuint,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib3fv"
                , glVertexAttrib3fv_function_type( &::osg::GL2Extensions::glVertexAttrib3fv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib3s
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib3s_function_type)( ::GLuint,::GLshort,::GLshort,::GLshort ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib3s"
                , glVertexAttrib3s_function_type( &::osg::GL2Extensions::glVertexAttrib3s )
                , ( bp::arg("index"), bp::arg("x"), bp::arg("y"), bp::arg("z") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib3sv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib3sv_function_type)( ::GLuint,::GLshort const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib3sv"
                , glVertexAttrib3sv_function_type( &::osg::GL2Extensions::glVertexAttrib3sv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4Nbv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4Nbv_function_type)( ::GLuint,::GLbyte const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4Nbv"
                , glVertexAttrib4Nbv_function_type( &::osg::GL2Extensions::glVertexAttrib4Nbv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4Niv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4Niv_function_type)( ::GLuint,::GLint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4Niv"
                , glVertexAttrib4Niv_function_type( &::osg::GL2Extensions::glVertexAttrib4Niv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4Nsv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4Nsv_function_type)( ::GLuint,::GLshort const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4Nsv"
                , glVertexAttrib4Nsv_function_type( &::osg::GL2Extensions::glVertexAttrib4Nsv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4Nub
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4Nub_function_type)( ::GLuint,::GLubyte,::GLubyte,::GLubyte,::GLubyte ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4Nub"
                , glVertexAttrib4Nub_function_type( &::osg::GL2Extensions::glVertexAttrib4Nub )
                , ( bp::arg("index"), bp::arg("x"), bp::arg("y"), bp::arg("z"), bp::arg("w") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4Nubv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4Nubv_function_type)( ::GLuint,::GLubyte const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4Nubv"
                , glVertexAttrib4Nubv_function_type( &::osg::GL2Extensions::glVertexAttrib4Nubv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4Nuiv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4Nuiv_function_type)( ::GLuint,::GLuint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4Nuiv"
                , glVertexAttrib4Nuiv_function_type( &::osg::GL2Extensions::glVertexAttrib4Nuiv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4Nusv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4Nusv_function_type)( ::GLuint,::GLushort const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4Nusv"
                , glVertexAttrib4Nusv_function_type( &::osg::GL2Extensions::glVertexAttrib4Nusv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4bv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4bv_function_type)( ::GLuint,::GLbyte const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4bv"
                , glVertexAttrib4bv_function_type( &::osg::GL2Extensions::glVertexAttrib4bv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4d
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4d_function_type)( ::GLuint,double,double,double,double ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4d"
                , glVertexAttrib4d_function_type( &::osg::GL2Extensions::glVertexAttrib4d )
                , ( bp::arg("index"), bp::arg("x"), bp::arg("y"), bp::arg("z"), bp::arg("w") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4dv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4dv_function_type)( ::GLuint,double const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4dv"
                , glVertexAttrib4dv_function_type( &::osg::GL2Extensions::glVertexAttrib4dv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4f
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4f_function_type)( ::GLuint,::GLfloat,::GLfloat,::GLfloat,::GLfloat ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4f"
                , glVertexAttrib4f_function_type( &::osg::GL2Extensions::glVertexAttrib4f )
                , ( bp::arg("index"), bp::arg("x"), bp::arg("y"), bp::arg("z"), bp::arg("w") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4fv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4fv_function_type)( ::GLuint,::GLfloat const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4fv"
                , glVertexAttrib4fv_function_type( &::osg::GL2Extensions::glVertexAttrib4fv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4iv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4iv_function_type)( ::GLuint,::GLint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4iv"
                , glVertexAttrib4iv_function_type( &::osg::GL2Extensions::glVertexAttrib4iv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4s
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4s_function_type)( ::GLuint,::GLshort,::GLshort,::GLshort,::GLshort ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4s"
                , glVertexAttrib4s_function_type( &::osg::GL2Extensions::glVertexAttrib4s )
                , ( bp::arg("index"), bp::arg("x"), bp::arg("y"), bp::arg("z"), bp::arg("w") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4sv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4sv_function_type)( ::GLuint,::GLshort const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4sv"
                , glVertexAttrib4sv_function_type( &::osg::GL2Extensions::glVertexAttrib4sv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4ubv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4ubv_function_type)( ::GLuint,::GLubyte const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4ubv"
                , glVertexAttrib4ubv_function_type( &::osg::GL2Extensions::glVertexAttrib4ubv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4uiv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4uiv_function_type)( ::GLuint,::GLuint const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4uiv"
                , glVertexAttrib4uiv_function_type( &::osg::GL2Extensions::glVertexAttrib4uiv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttrib4usv
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttrib4usv_function_type)( ::GLuint,::GLushort const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttrib4usv"
                , glVertexAttrib4usv_function_type( &::osg::GL2Extensions::glVertexAttrib4usv )
                , ( bp::arg("index"), bp::arg("v") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttribDivisor
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttribDivisor_function_type)( ::GLuint,::GLuint ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttribDivisor"
                , glVertexAttribDivisor_function_type( &::osg::GL2Extensions::glVertexAttribDivisor )
                , ( bp::arg("index"), bp::arg("divisor") ) );
        
        }
        { //::osg::GL2Extensions::glVertexAttribPointer
        
            typedef void ( ::osg::GL2Extensions::*glVertexAttribPointer_function_type)( ::GLuint,::GLint,::GLenum,::GLboolean,::GLsizei,::GLvoid const * ) const;
            
            GL2Extensions_exposer.def( 
                "glVertexAttribPointer"
                , glVertexAttribPointer_function_type( &::osg::GL2Extensions::glVertexAttribPointer )
                , ( bp::arg("index"), bp::arg("size"), bp::arg("type"), bp::arg("normalized"), bp::arg("stride"), bp::arg("pointer") ) );
        
        }
        { //::osg::GL2Extensions::isDrawBuffersSupported
        
            typedef bool ( ::osg::GL2Extensions::*isDrawBuffersSupported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "isDrawBuffersSupported"
                , isDrawBuffersSupported_function_type( &::osg::GL2Extensions::isDrawBuffersSupported ) );
        
        }
        { //::osg::GL2Extensions::isFragmentShaderSupported
        
            typedef bool ( ::osg::GL2Extensions::*isFragmentShaderSupported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "isFragmentShaderSupported"
                , isFragmentShaderSupported_function_type( &::osg::GL2Extensions::isFragmentShaderSupported ) );
        
        }
        { //::osg::GL2Extensions::isGeometryShader4Supported
        
            typedef bool ( ::osg::GL2Extensions::*isGeometryShader4Supported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "isGeometryShader4Supported"
                , isGeometryShader4Supported_function_type( &::osg::GL2Extensions::isGeometryShader4Supported ) );
        
        }
        { //::osg::GL2Extensions::isGetProgramBinarySupported
        
            typedef bool ( ::osg::GL2Extensions::*isGetProgramBinarySupported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "isGetProgramBinarySupported"
                , isGetProgramBinarySupported_function_type( &::osg::GL2Extensions::isGetProgramBinarySupported ) );
        
        }
        { //::osg::GL2Extensions::isGlslSupported
        
            typedef bool ( ::osg::GL2Extensions::*isGlslSupported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "isGlslSupported"
                , isGlslSupported_function_type( &::osg::GL2Extensions::isGlslSupported ) );
        
        }
        { //::osg::GL2Extensions::isGpuShader4Supported
        
            typedef bool ( ::osg::GL2Extensions::*isGpuShader4Supported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "isGpuShader4Supported"
                , isGpuShader4Supported_function_type( &::osg::GL2Extensions::isGpuShader4Supported ) );
        
        }
        { //::osg::GL2Extensions::isGpuShaderFp64Supported
        
            typedef bool ( ::osg::GL2Extensions::*isGpuShaderFp64Supported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "isGpuShaderFp64Supported"
                , isGpuShaderFp64Supported_function_type( &::osg::GL2Extensions::isGpuShaderFp64Supported ) );
        
        }
        { //::osg::GL2Extensions::isLanguage100Supported
        
            typedef bool ( ::osg::GL2Extensions::*isLanguage100Supported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "isLanguage100Supported"
                , isLanguage100Supported_function_type( &::osg::GL2Extensions::isLanguage100Supported ) );
        
        }
        { //::osg::GL2Extensions::isShaderAtomicCounterSupported
        
            typedef bool ( ::osg::GL2Extensions::*isShaderAtomicCounterSupported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "isShaderAtomicCounterSupported"
                , isShaderAtomicCounterSupported_function_type( &::osg::GL2Extensions::isShaderAtomicCounterSupported ) );
        
        }
        { //::osg::GL2Extensions::isShaderObjectsSupported
        
            typedef bool ( ::osg::GL2Extensions::*isShaderObjectsSupported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "isShaderObjectsSupported"
                , isShaderObjectsSupported_function_type( &::osg::GL2Extensions::isShaderObjectsSupported ) );
        
        }
        { //::osg::GL2Extensions::isUniformBufferObjectSupported
        
            typedef bool ( ::osg::GL2Extensions::*isUniformBufferObjectSupported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "isUniformBufferObjectSupported"
                , isUniformBufferObjectSupported_function_type( &::osg::GL2Extensions::isUniformBufferObjectSupported ) );
        
        }
        { //::osg::GL2Extensions::isVertexShaderSupported
        
            typedef bool ( ::osg::GL2Extensions::*isVertexShaderSupported_function_type)(  ) const;
            
            GL2Extensions_exposer.def( 
                "isVertexShaderSupported"
                , isVertexShaderSupported_function_type( &::osg::GL2Extensions::isVertexShaderSupported ) );
        
        }
        { //::osg::GL2Extensions::lowestCommonDenominator
        
            typedef void ( ::osg::GL2Extensions::*lowestCommonDenominator_function_type)( ::osg::GL2Extensions const & ) ;
            
            GL2Extensions_exposer.def( 
                "lowestCommonDenominator"
                , lowestCommonDenominator_function_type( &::osg::GL2Extensions::lowestCommonDenominator )
                , ( bp::arg("rhs") ) );
        
        }
        { //::osg::GL2Extensions::setFragmentShaderSupported
        
            typedef void ( ::osg::GL2Extensions::*setFragmentShaderSupported_function_type)( bool ) ;
            
            GL2Extensions_exposer.def( 
                "setFragmentShaderSupported"
                , setFragmentShaderSupported_function_type( &::osg::GL2Extensions::setFragmentShaderSupported )
                , ( bp::arg("flag") ) );
        
        }
        { //::osg::GL2Extensions::setGeometryShader4Supported
        
            typedef void ( ::osg::GL2Extensions::*setGeometryShader4Supported_function_type)( bool ) ;
            
            GL2Extensions_exposer.def( 
                "setGeometryShader4Supported"
                , setGeometryShader4Supported_function_type( &::osg::GL2Extensions::setGeometryShader4Supported )
                , ( bp::arg("flag") ) );
        
        }
        { //::osg::GL2Extensions::setGetProgramBinarySupported
        
            typedef void ( ::osg::GL2Extensions::*setGetProgramBinarySupported_function_type)( bool ) ;
            
            GL2Extensions_exposer.def( 
                "setGetProgramBinarySupported"
                , setGetProgramBinarySupported_function_type( &::osg::GL2Extensions::setGetProgramBinarySupported )
                , ( bp::arg("flag") ) );
        
        }
        { //::osg::GL2Extensions::setGpuShader4Supported
        
            typedef void ( ::osg::GL2Extensions::*setGpuShader4Supported_function_type)( bool ) ;
            
            GL2Extensions_exposer.def( 
                "setGpuShader4Supported"
                , setGpuShader4Supported_function_type( &::osg::GL2Extensions::setGpuShader4Supported )
                , ( bp::arg("flag") ) );
        
        }
        { //::osg::GL2Extensions::setGpuShaderFp64Supported
        
            typedef void ( ::osg::GL2Extensions::*setGpuShaderFp64Supported_function_type)( bool ) ;
            
            GL2Extensions_exposer.def( 
                "setGpuShaderFp64Supported"
                , setGpuShaderFp64Supported_function_type( &::osg::GL2Extensions::setGpuShaderFp64Supported )
                , ( bp::arg("flag") ) );
        
        }
        { //::osg::GL2Extensions::setLanguage100Supported
        
            typedef void ( ::osg::GL2Extensions::*setLanguage100Supported_function_type)( bool ) ;
            
            GL2Extensions_exposer.def( 
                "setLanguage100Supported"
                , setLanguage100Supported_function_type( &::osg::GL2Extensions::setLanguage100Supported )
                , ( bp::arg("flag") ) );
        
        }
        { //::osg::GL2Extensions::setShaderAtomicCounterSupported
        
            typedef void ( ::osg::GL2Extensions::*setShaderAtomicCounterSupported_function_type)( bool ) ;
            
            GL2Extensions_exposer.def( 
                "setShaderAtomicCounterSupported"
                , setShaderAtomicCounterSupported_function_type( &::osg::GL2Extensions::setShaderAtomicCounterSupported )
                , ( bp::arg("flag") ) );
        
        }
        { //::osg::GL2Extensions::setShaderObjectsSupported
        
            typedef void ( ::osg::GL2Extensions::*setShaderObjectsSupported_function_type)( bool ) ;
            
            GL2Extensions_exposer.def( 
                "setShaderObjectsSupported"
                , setShaderObjectsSupported_function_type( &::osg::GL2Extensions::setShaderObjectsSupported )
                , ( bp::arg("flag") ) );
        
        }
        { //::osg::GL2Extensions::setTessellationShadersSupported
        
            typedef void ( ::osg::GL2Extensions::*setTessellationShadersSupported_function_type)( bool ) ;
            
            GL2Extensions_exposer.def( 
                "setTessellationShadersSupported"
                , setTessellationShadersSupported_function_type( &::osg::GL2Extensions::setTessellationShadersSupported )
                , ( bp::arg("flag") ) );
        
        }
        { //::osg::GL2Extensions::setUniformBufferObjectSupported
        
            typedef void ( ::osg::GL2Extensions::*setUniformBufferObjectSupported_function_type)( bool ) ;
            
            GL2Extensions_exposer.def( 
                "setUniformBufferObjectSupported"
                , setUniformBufferObjectSupported_function_type( &::osg::GL2Extensions::setUniformBufferObjectSupported )
                , ( bp::arg("flag") ) );
        
        }
        { //::osg::GL2Extensions::setVertexShaderSupported
        
            typedef void ( ::osg::GL2Extensions::*setVertexShaderSupported_function_type)( bool ) ;
            
            GL2Extensions_exposer.def( 
                "setVertexShaderSupported"
                , setVertexShaderSupported_function_type( &::osg::GL2Extensions::setVertexShaderSupported )
                , ( bp::arg("flag") ) );
        
        }
        { //::osg::GL2Extensions::setupGL2Extensions
        
            typedef void ( ::osg::GL2Extensions::*setupGL2Extensions_function_type)( unsigned int ) ;
            
            GL2Extensions_exposer.def( 
                "setupGL2Extensions"
                , setupGL2Extensions_function_type( &::osg::GL2Extensions::setupGL2Extensions )
                , ( bp::arg("contextID") ) );
        
        }
        { //::osg::Referenced::setThreadSafeRefUnref
        
            typedef void ( ::osg::Referenced::*setThreadSafeRefUnref_function_type)( bool ) ;
            typedef void ( GL2Extensions_wrapper::*default_setThreadSafeRefUnref_function_type)( bool ) ;
            
            GL2Extensions_exposer.def( 
                "setThreadSafeRefUnref"
                , setThreadSafeRefUnref_function_type(&::osg::Referenced::setThreadSafeRefUnref)
                , default_setThreadSafeRefUnref_function_type(&GL2Extensions_wrapper::default_setThreadSafeRefUnref)
                , ( bp::arg("threadSafe") ) );
        
        }
        GL2Extensions_exposer.staticmethod( "Get" );
        GL2Extensions_exposer.staticmethod( "Set" );
    }

}
