// This file has been generated by Py++.

#include "boost/python.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "wrap_osg.h"
#include "vector_less__unsigned_char__greater_.pypp.hpp"

namespace bp = boost::python;

void register_vector_less__unsigned_char__greater__class(){

    { //::std::vector< unsigned char >
        typedef bp::class_< std::vector< unsigned char > > vector_less__unsigned_char__greater__exposer_t;
        vector_less__unsigned_char__greater__exposer_t vector_less__unsigned_char__greater__exposer = vector_less__unsigned_char__greater__exposer_t( "vector_less__unsigned_char__greater_" );
        bp::scope vector_less__unsigned_char__greater__scope( vector_less__unsigned_char__greater__exposer );
        vector_less__unsigned_char__greater__exposer.def( bp::vector_indexing_suite< ::std::vector< unsigned char >, true >() );
        vector_less__unsigned_char__greater__exposer.def( bp::self != bp::other< osg::MixinVector< unsigned char > >() );
        vector_less__unsigned_char__greater__exposer.def( bp::self < bp::other< osg::MixinVector< unsigned char > >() );
        vector_less__unsigned_char__greater__exposer.def( bp::self <= bp::other< osg::MixinVector< unsigned char > >() );
        vector_less__unsigned_char__greater__exposer.def( bp::self == bp::other< osg::MixinVector< unsigned char > >() );
        vector_less__unsigned_char__greater__exposer.def( bp::self > bp::other< osg::MixinVector< unsigned char > >() );
        vector_less__unsigned_char__greater__exposer.def( bp::self >= bp::other< osg::MixinVector< unsigned char > >() );
    }

}
