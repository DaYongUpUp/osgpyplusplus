// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "geometrycostestimator.pypp.hpp"

namespace bp = boost::python;

struct GeometryCostEstimator_wrapper : osg::GeometryCostEstimator, bp::wrapper< osg::GeometryCostEstimator > {

    GeometryCostEstimator_wrapper( )
    : osg::GeometryCostEstimator( )
      , bp::wrapper< osg::GeometryCostEstimator >(){
        // null constructor
    
    }

    virtual void setThreadSafeRefUnref( bool threadSafe ) {
        if( bp::override func_setThreadSafeRefUnref = this->get_override( "setThreadSafeRefUnref" ) )
            func_setThreadSafeRefUnref( threadSafe );
        else{
            this->osg::Referenced::setThreadSafeRefUnref( threadSafe );
        }
    }
    
    void default_setThreadSafeRefUnref( bool threadSafe ) {
        osg::Referenced::setThreadSafeRefUnref( threadSafe );
    }

};

void register_GeometryCostEstimator_class(){

    bp::class_< GeometryCostEstimator_wrapper, bp::bases< osg::Referenced >, boost::noncopyable >( "GeometryCostEstimator", bp::init< >() )    
        .def( 
            "calibrate"
            , (void ( ::osg::GeometryCostEstimator::* )( ::osg::RenderInfo & ))( &::osg::GeometryCostEstimator::calibrate )
            , ( bp::arg("renderInfo") ) )    
        .def( 
            "estimateCompileCost"
            , (::osg::CostPair ( ::osg::GeometryCostEstimator::* )( ::osg::Geometry const * )const)( &::osg::GeometryCostEstimator::estimateCompileCost )
            , ( bp::arg("geometry") ) )    
        .def( 
            "estimateDrawCost"
            , (::osg::CostPair ( ::osg::GeometryCostEstimator::* )( ::osg::Geometry const * )const)( &::osg::GeometryCostEstimator::estimateDrawCost )
            , ( bp::arg("geometry") ) )    
        .def( 
            "setDefaults"
            , (void ( ::osg::GeometryCostEstimator::* )(  ))( &::osg::GeometryCostEstimator::setDefaults ) )    
        .def( 
            "setThreadSafeRefUnref"
            , (void ( ::osg::Referenced::* )( bool ))(&::osg::Referenced::setThreadSafeRefUnref)
            , (void ( GeometryCostEstimator_wrapper::* )( bool ))(&GeometryCostEstimator_wrapper::default_setThreadSafeRefUnref)
            , ( bp::arg("threadSafe") ) );

}
