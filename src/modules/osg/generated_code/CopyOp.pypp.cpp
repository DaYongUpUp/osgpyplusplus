// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "copyop.pypp.hpp"

namespace bp = boost::python;

struct CopyOp_wrapper : osg::CopyOp, bp::wrapper< osg::CopyOp > {

    CopyOp_wrapper(osg::CopyOp const & arg )
    : osg::CopyOp( arg )
      , bp::wrapper< osg::CopyOp >(){
        // copy constructor
        
    }

    CopyOp_wrapper(unsigned int flags=(unsigned int)(::osg::CopyOp::SHALLOW_COPY) )
    : osg::CopyOp( flags )
      , bp::wrapper< osg::CopyOp >(){
        // constructor
    
    }

    virtual ::osg::Referenced * operator()( ::osg::Referenced const * ref ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(ref) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(ref) );
        }
    }
    
    ::osg::Referenced * default___call__( ::osg::Referenced const * ref ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(ref) );
    }

    virtual ::osg::Object * operator()( ::osg::Object const * obj ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(obj) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(obj) );
        }
    }
    
    ::osg::Object * default___call__( ::osg::Object const * obj ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(obj) );
    }

    virtual ::osg::Node * operator()( ::osg::Node const * node ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(node) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(node) );
        }
    }
    
    ::osg::Node * default___call__( ::osg::Node const * node ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(node) );
    }

    virtual ::osg::Drawable * operator()( ::osg::Drawable const * drawable ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(drawable) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(drawable) );
        }
    }
    
    ::osg::Drawable * default___call__( ::osg::Drawable const * drawable ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(drawable) );
    }

    virtual ::osg::StateSet * operator()( ::osg::StateSet const * stateset ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(stateset) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(stateset) );
        }
    }
    
    ::osg::StateSet * default___call__( ::osg::StateSet const * stateset ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(stateset) );
    }

    virtual ::osg::StateAttribute * operator()( ::osg::StateAttribute const * attr ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(attr) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(attr) );
        }
    }
    
    ::osg::StateAttribute * default___call__( ::osg::StateAttribute const * attr ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(attr) );
    }

    virtual ::osg::Texture * operator()( ::osg::Texture const * text ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(text) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(text) );
        }
    }
    
    ::osg::Texture * default___call__( ::osg::Texture const * text ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(text) );
    }

    virtual ::osg::Image * operator()( ::osg::Image const * image ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(image) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(image) );
        }
    }
    
    ::osg::Image * default___call__( ::osg::Image const * image ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(image) );
    }

    virtual ::osg::Array * operator()( ::osg::Array const * array ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(array) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(array) );
        }
    }
    
    ::osg::Array * default___call__( ::osg::Array const * array ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(array) );
    }

    virtual ::osg::PrimitiveSet * operator()( ::osg::PrimitiveSet const * primitives ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(primitives) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(primitives) );
        }
    }
    
    ::osg::PrimitiveSet * default___call__( ::osg::PrimitiveSet const * primitives ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(primitives) );
    }

    virtual ::osg::Shape * operator()( ::osg::Shape const * shape ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(shape) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(shape) );
        }
    }
    
    ::osg::Shape * default___call__( ::osg::Shape const * shape ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(shape) );
    }

    virtual ::osg::Uniform * operator()( ::osg::Uniform const * shape ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(shape) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(shape) );
        }
    }
    
    ::osg::Uniform * default___call__( ::osg::Uniform const * shape ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(shape) );
    }

    virtual ::osg::NodeCallback * operator()( ::osg::NodeCallback const * nodecallback ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(nodecallback) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(nodecallback) );
        }
    }
    
    ::osg::NodeCallback * default___call__( ::osg::NodeCallback const * nodecallback ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(nodecallback) );
    }

    virtual ::osg::StateAttributeCallback * operator()( ::osg::StateAttributeCallback const * stateattributecallback ) const  {
        if( bp::override func___call__ = this->get_override( "__call__" ) )
            return func___call__( boost::python::ptr(stateattributecallback) );
        else{
            return this->osg::CopyOp::operator()( boost::python::ptr(stateattributecallback) );
        }
    }
    
    ::osg::StateAttributeCallback * default___call__( ::osg::StateAttributeCallback const * stateattributecallback ) const  {
        return osg::CopyOp::operator()( boost::python::ptr(stateattributecallback) );
    }

};

void register_CopyOp_class(){

    { //::osg::CopyOp
        typedef bp::class_< CopyOp_wrapper > CopyOp_exposer_t;
        CopyOp_exposer_t CopyOp_exposer = CopyOp_exposer_t( "CopyOp", bp::init< bp::optional< unsigned int > >(( bp::arg("flags")=(unsigned int)((unsigned int)(::osg::CopyOp::SHALLOW_COPY)) )) );
        bp::scope CopyOp_scope( CopyOp_exposer );
        bp::enum_< osg::CopyOp::Options>("Options")
            .value("SHALLOW_COPY", osg::CopyOp::SHALLOW_COPY)
            .value("DEEP_COPY_OBJECTS", osg::CopyOp::DEEP_COPY_OBJECTS)
            .value("DEEP_COPY_NODES", osg::CopyOp::DEEP_COPY_NODES)
            .value("DEEP_COPY_DRAWABLES", osg::CopyOp::DEEP_COPY_DRAWABLES)
            .value("DEEP_COPY_STATESETS", osg::CopyOp::DEEP_COPY_STATESETS)
            .value("DEEP_COPY_STATEATTRIBUTES", osg::CopyOp::DEEP_COPY_STATEATTRIBUTES)
            .value("DEEP_COPY_TEXTURES", osg::CopyOp::DEEP_COPY_TEXTURES)
            .value("DEEP_COPY_IMAGES", osg::CopyOp::DEEP_COPY_IMAGES)
            .value("DEEP_COPY_ARRAYS", osg::CopyOp::DEEP_COPY_ARRAYS)
            .value("DEEP_COPY_PRIMITIVES", osg::CopyOp::DEEP_COPY_PRIMITIVES)
            .value("DEEP_COPY_SHAPES", osg::CopyOp::DEEP_COPY_SHAPES)
            .value("DEEP_COPY_UNIFORMS", osg::CopyOp::DEEP_COPY_UNIFORMS)
            .value("DEEP_COPY_CALLBACKS", osg::CopyOp::DEEP_COPY_CALLBACKS)
            .value("DEEP_COPY_USERDATA", osg::CopyOp::DEEP_COPY_USERDATA)
            .value("DEEP_COPY_ALL", osg::CopyOp::DEEP_COPY_ALL)
            .export_values()
            ;
        bp::implicitly_convertible< unsigned int, osg::CopyOp >();
        { //::osg::CopyOp::getCopyFlags
        
            typedef unsigned int ( ::osg::CopyOp::*getCopyFlags_function_type)(  ) const;
            
            CopyOp_exposer.def( 
                "getCopyFlags"
                , getCopyFlags_function_type( &::osg::CopyOp::getCopyFlags ) );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::Referenced * ( ::osg::CopyOp::*__call___function_type)( ::osg::Referenced const * ) const;
            typedef ::osg::Referenced * ( CopyOp_wrapper::*default___call___function_type)( ::osg::Referenced const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("ref") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::Object * ( ::osg::CopyOp::*__call___function_type)( ::osg::Object const * ) const;
            typedef ::osg::Object * ( CopyOp_wrapper::*default___call___function_type)( ::osg::Object const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("obj") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::Node * ( ::osg::CopyOp::*__call___function_type)( ::osg::Node const * ) const;
            typedef ::osg::Node * ( CopyOp_wrapper::*default___call___function_type)( ::osg::Node const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("node") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::Drawable * ( ::osg::CopyOp::*__call___function_type)( ::osg::Drawable const * ) const;
            typedef ::osg::Drawable * ( CopyOp_wrapper::*default___call___function_type)( ::osg::Drawable const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("drawable") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::StateSet * ( ::osg::CopyOp::*__call___function_type)( ::osg::StateSet const * ) const;
            typedef ::osg::StateSet * ( CopyOp_wrapper::*default___call___function_type)( ::osg::StateSet const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("stateset") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::StateAttribute * ( ::osg::CopyOp::*__call___function_type)( ::osg::StateAttribute const * ) const;
            typedef ::osg::StateAttribute * ( CopyOp_wrapper::*default___call___function_type)( ::osg::StateAttribute const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("attr") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::Texture * ( ::osg::CopyOp::*__call___function_type)( ::osg::Texture const * ) const;
            typedef ::osg::Texture * ( CopyOp_wrapper::*default___call___function_type)( ::osg::Texture const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("text") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::Image * ( ::osg::CopyOp::*__call___function_type)( ::osg::Image const * ) const;
            typedef ::osg::Image * ( CopyOp_wrapper::*default___call___function_type)( ::osg::Image const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("image") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::Array * ( ::osg::CopyOp::*__call___function_type)( ::osg::Array const * ) const;
            typedef ::osg::Array * ( CopyOp_wrapper::*default___call___function_type)( ::osg::Array const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("array") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::PrimitiveSet * ( ::osg::CopyOp::*__call___function_type)( ::osg::PrimitiveSet const * ) const;
            typedef ::osg::PrimitiveSet * ( CopyOp_wrapper::*default___call___function_type)( ::osg::PrimitiveSet const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("primitives") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::Shape * ( ::osg::CopyOp::*__call___function_type)( ::osg::Shape const * ) const;
            typedef ::osg::Shape * ( CopyOp_wrapper::*default___call___function_type)( ::osg::Shape const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("shape") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::Uniform * ( ::osg::CopyOp::*__call___function_type)( ::osg::Uniform const * ) const;
            typedef ::osg::Uniform * ( CopyOp_wrapper::*default___call___function_type)( ::osg::Uniform const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("shape") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::NodeCallback * ( ::osg::CopyOp::*__call___function_type)( ::osg::NodeCallback const * ) const;
            typedef ::osg::NodeCallback * ( CopyOp_wrapper::*default___call___function_type)( ::osg::NodeCallback const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("nodecallback") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::operator()
        
            typedef ::osg::StateAttributeCallback * ( ::osg::CopyOp::*__call___function_type)( ::osg::StateAttributeCallback const * ) const;
            typedef ::osg::StateAttributeCallback * ( CopyOp_wrapper::*default___call___function_type)( ::osg::StateAttributeCallback const * ) const;
            
            CopyOp_exposer.def( 
                "__call__"
                , __call___function_type(&::osg::CopyOp::operator())
                , default___call___function_type(&CopyOp_wrapper::default___call__)
                , ( bp::arg("stateattributecallback") )
                , bp::return_value_policy< bp::manage_new_object >() );
        
        }
        { //::osg::CopyOp::setCopyFlags
        
            typedef void ( ::osg::CopyOp::*setCopyFlags_function_type)( unsigned int ) ;
            
            CopyOp_exposer.def( 
                "setCopyFlags"
                , setCopyFlags_function_type( &::osg::CopyOp::setCopyFlags )
                , ( bp::arg("flags") ) );
        
        }
    }

}
