// This file has been generated by Py++.

#include "boost/python.hpp"
#include "wrap_osg.h"
#include "boundingsphereimpl_less__osg_scope_vec3f__greater_.pypp.hpp"

namespace bp = boost::python;

void register_BoundingSphereImpl_less__osg_scope_Vec3f__greater__class(){

    { //::osg::BoundingSphereImpl< osg::Vec3f >
        typedef bp::class_< osg::BoundingSphereImpl< osg::Vec3f > > BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer_t;
        BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer_t BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer = BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer_t( "BoundingSphereImpl_less__osg_scope_Vec3f__greater_", bp::init< >() );
        bp::scope BoundingSphereImpl_less__osg_scope_Vec3f__greater__scope( BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer );
        BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( bp::init< osg::Vec3f const &, float >(( bp::arg("center"), bp::arg("radius") )) );
        BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( bp::init< osg::BoundingSphereImpl< osg::Vec3f > const & >(( bp::arg("bs") )) );
        BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( bp::init< osg::BoundingBoxImpl< osg::Vec3f > const & >(( bp::arg("bb") )) );
        bp::implicitly_convertible< osg::BoundingBoxImpl< osg::Vec3f > const &, osg::BoundingSphereImpl< osg::Vec3f > >();
        { //::osg::BoundingSphereImpl< osg::Vec3f >::center
        
            typedef osg::BoundingSphereImpl< osg::Vec3f > exported_class_t;
            typedef ::osg::Vec3f & ( exported_class_t::*center_function_type)(  ) ;
            
            BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( 
                "center"
                , center_function_type( &::osg::BoundingSphereImpl< osg::Vec3f >::center )
                , bp::return_internal_reference< >() );
        
        }
        { //::osg::BoundingSphereImpl< osg::Vec3f >::center
        
            typedef osg::BoundingSphereImpl< osg::Vec3f > exported_class_t;
            typedef ::osg::Vec3f const & ( exported_class_t::*center_function_type)(  ) const;
            
            BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( 
                "center"
                , center_function_type( &::osg::BoundingSphereImpl< osg::Vec3f >::center )
                , bp::return_internal_reference< >() );
        
        }
        { //::osg::BoundingSphereImpl< osg::Vec3f >::contains
        
            typedef osg::BoundingSphereImpl< osg::Vec3f > exported_class_t;
            typedef bool ( exported_class_t::*contains_function_type)( ::osg::Vec3f const & ) const;
            
            BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( 
                "contains"
                , contains_function_type( &::osg::BoundingSphereImpl< osg::Vec3f >::contains )
                , ( bp::arg("v") ) );
        
        }
        { //::osg::BoundingSphereImpl< osg::Vec3f >::expandBy
        
            typedef osg::BoundingSphereImpl< osg::Vec3f > exported_class_t;
            typedef void ( exported_class_t::*expandBy_function_type)( ::osg::BoundingSphereImpl< osg::Vec3f > const & ) ;
            
            BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( 
                "expandBy"
                , expandBy_function_type( &::osg::BoundingSphereImpl< osg::Vec3f >::expandBy )
                , ( bp::arg("sh") ) );
        
        }
        { //::osg::BoundingSphereImpl< osg::Vec3f >::expandRadiusBy
        
            typedef osg::BoundingSphereImpl< osg::Vec3f > exported_class_t;
            typedef void ( exported_class_t::*expandRadiusBy_function_type)( ::osg::BoundingSphereImpl< osg::Vec3f > const & ) ;
            
            BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( 
                "expandRadiusBy"
                , expandRadiusBy_function_type( &::osg::BoundingSphereImpl< osg::Vec3f >::expandRadiusBy )
                , ( bp::arg("sh") ) );
        
        }
        { //::osg::BoundingSphereImpl< osg::Vec3f >::init
        
            typedef osg::BoundingSphereImpl< osg::Vec3f > exported_class_t;
            typedef void ( exported_class_t::*init_function_type)(  ) ;
            
            BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( 
                "init"
                , init_function_type( &::osg::BoundingSphereImpl< osg::Vec3f >::init ) );
        
        }
        { //::osg::BoundingSphereImpl< osg::Vec3f >::intersects
        
            typedef osg::BoundingSphereImpl< osg::Vec3f > exported_class_t;
            typedef bool ( exported_class_t::*intersects_function_type)( ::osg::BoundingSphereImpl< osg::Vec3f > const & ) const;
            
            BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( 
                "intersects"
                , intersects_function_type( &::osg::BoundingSphereImpl< osg::Vec3f >::intersects )
                , ( bp::arg("bs") ) );
        
        }
        BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( bp::self != bp::self );
        BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( bp::self == bp::self );
        { //::osg::BoundingSphereImpl< osg::Vec3f >::radius
        
            typedef osg::BoundingSphereImpl< osg::Vec3f > exported_class_t;
            typedef float & ( exported_class_t::*radius_function_type)(  ) ;
            
            BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( 
                "radius"
                , radius_function_type( &::osg::BoundingSphereImpl< osg::Vec3f >::radius )
                , bp::return_value_policy< bp::copy_non_const_reference >() );
        
        }
        { //::osg::BoundingSphereImpl< osg::Vec3f >::radius
        
            typedef osg::BoundingSphereImpl< osg::Vec3f > exported_class_t;
            typedef float ( exported_class_t::*radius_function_type)(  ) const;
            
            BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( 
                "radius"
                , radius_function_type( &::osg::BoundingSphereImpl< osg::Vec3f >::radius ) );
        
        }
        { //::osg::BoundingSphereImpl< osg::Vec3f >::radius2
        
            typedef osg::BoundingSphereImpl< osg::Vec3f > exported_class_t;
            typedef float ( exported_class_t::*radius2_function_type)(  ) const;
            
            BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( 
                "radius2"
                , radius2_function_type( &::osg::BoundingSphereImpl< osg::Vec3f >::radius2 ) );
        
        }
        { //::osg::BoundingSphereImpl< osg::Vec3f >::set
        
            typedef osg::BoundingSphereImpl< osg::Vec3f > exported_class_t;
            typedef void ( exported_class_t::*set_function_type)( ::osg::Vec3f const &,float ) ;
            
            BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( 
                "set"
                , set_function_type( &::osg::BoundingSphereImpl< osg::Vec3f >::set )
                , ( bp::arg("center"), bp::arg("radius") ) );
        
        }
        { //::osg::BoundingSphereImpl< osg::Vec3f >::valid
        
            typedef osg::BoundingSphereImpl< osg::Vec3f > exported_class_t;
            typedef bool ( exported_class_t::*valid_function_type)(  ) const;
            
            BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def( 
                "valid"
                , valid_function_type( &::osg::BoundingSphereImpl< osg::Vec3f >::valid ) );
        
        }
        BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def_readwrite( "_center", &osg::BoundingSphereImpl< osg::Vec3f >::_center );
        BoundingSphereImpl_less__osg_scope_Vec3f__greater__exposer.def_readwrite( "_radius", &osg::BoundingSphereImpl< osg::Vec3f >::_radius );
    }

}
